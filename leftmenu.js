// Generated by Haxe 3.4.0
(function ($hx_exports) { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var React_Component = require("react").Component;
var App = function(props,context) {
	React_Component.call(this,props,context);
};
App.__name__ = true;
App.__super__ = React_Component;
App.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_sidebar_LeftMenu,{ });
		var tmp1 = React.createElement(content_ContentContainer,{ });
		var tmp2 = React.createElement("div",{ className : "content"},tmp1);
		return React.createElement("div",{ },tmp,tmp2);
	}
});
var CssClass = function() { };
CssClass.__name__ = true;
var msignal_Signal = function(valueClasses) {
	if(valueClasses == null) {
		valueClasses = [];
	}
	this.valueClasses = valueClasses;
	this.slots = msignal_SlotList.NIL;
	this.priorityBased = false;
};
msignal_Signal.__name__ = true;
msignal_Signal.prototype = {
	add: function(listener) {
		return this.registerListener(listener);
	}
	,addOnce: function(listener) {
		return this.registerListener(listener,true);
	}
	,addWithPriority: function(listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		return this.registerListener(listener,false,priority);
	}
	,addOnceWithPriority: function(listener,priority) {
		if(priority == null) {
			priority = 0;
		}
		return this.registerListener(listener,true,priority);
	}
	,remove: function(listener) {
		var slot = this.slots.find(listener);
		if(slot == null) {
			return null;
		}
		this.slots = this.slots.filterNot(listener);
		return slot;
	}
	,removeAll: function() {
		this.slots = msignal_SlotList.NIL;
	}
	,registerListener: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		if(this.registrationPossible(listener,once)) {
			var newSlot = this.createSlot(listener,once,priority);
			if(!this.priorityBased && priority != 0) {
				this.priorityBased = true;
			}
			if(!this.priorityBased && priority == 0) {
				this.slots = this.slots.prepend(newSlot);
			} else {
				this.slots = this.slots.insertWithPriority(newSlot);
			}
			return newSlot;
		}
		return this.slots.find(listener);
	}
	,registrationPossible: function(listener,once) {
		if(!this.slots.nonEmpty) {
			return true;
		}
		var existingSlot = this.slots.find(listener);
		if(existingSlot == null) {
			return true;
		}
		if(existingSlot.once != once) {
			throw new js__$Boot_HaxeError("You cannot addOnce() then add() the same listener without removing the relationship first.");
		}
		return false;
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return null;
	}
	,get_numListeners: function() {
		return this.slots.get_length();
	}
};
var msignal_Signal2 = function(type1,type2) {
	msignal_Signal.call(this,[type1,type2]);
};
msignal_Signal2.__name__ = true;
msignal_Signal2.__super__ = msignal_Signal;
msignal_Signal2.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function(value1,value2) {
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute(value1,value2);
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_Slot2(this,listener,once,priority);
	}
});
var msignal_SlotList = function(head,tail) {
	this.nonEmpty = false;
	if(head == null && tail == null) {
		if(msignal_SlotList.NIL != null) {
			throw new js__$Boot_HaxeError("Parameters head and tail are null. Use the NIL element instead.");
		}
		this.nonEmpty = false;
	} else if(head == null) {
		throw new js__$Boot_HaxeError("Parameter head cannot be null.");
	} else {
		this.head = head;
		this.tail = tail == null ? msignal_SlotList.NIL : tail;
		this.nonEmpty = true;
	}
};
msignal_SlotList.__name__ = true;
msignal_SlotList.prototype = {
	get_length: function() {
		if(!this.nonEmpty) {
			return 0;
		}
		if(this.tail == msignal_SlotList.NIL) {
			return 1;
		}
		var result = 0;
		var p = this;
		while(p.nonEmpty) {
			++result;
			p = p.tail;
		}
		return result;
	}
	,prepend: function(slot) {
		return new msignal_SlotList(slot,this);
	}
	,append: function(slot) {
		if(slot == null) {
			return this;
		}
		if(!this.nonEmpty) {
			return new msignal_SlotList(slot);
		}
		if(this.tail == msignal_SlotList.NIL) {
			return new msignal_SlotList(slot).prepend(this.head);
		}
		var wholeClone = new msignal_SlotList(this.head);
		var subClone = wholeClone;
		var current = this.tail;
		while(current.nonEmpty) {
			subClone = subClone.tail = new msignal_SlotList(current.head);
			current = current.tail;
		}
		subClone.tail = new msignal_SlotList(slot);
		return wholeClone;
	}
	,insertWithPriority: function(slot) {
		if(!this.nonEmpty) {
			return new msignal_SlotList(slot);
		}
		var priority = slot.priority;
		if(priority >= this.head.priority) {
			return this.prepend(slot);
		}
		var wholeClone = new msignal_SlotList(this.head);
		var subClone = wholeClone;
		var current = this.tail;
		while(current.nonEmpty) {
			if(priority > current.head.priority) {
				subClone.tail = current.prepend(slot);
				return wholeClone;
			}
			subClone = subClone.tail = new msignal_SlotList(current.head);
			current = current.tail;
		}
		subClone.tail = new msignal_SlotList(slot);
		return wholeClone;
	}
	,filterNot: function(listener) {
		if(!this.nonEmpty || listener == null) {
			return this;
		}
		if(Reflect.compareMethods(this.head.listener,listener)) {
			return this.tail;
		}
		var wholeClone = new msignal_SlotList(this.head);
		var subClone = wholeClone;
		var current = this.tail;
		while(current.nonEmpty) {
			if(Reflect.compareMethods(current.head.listener,listener)) {
				subClone.tail = current.tail;
				return wholeClone;
			}
			subClone = subClone.tail = new msignal_SlotList(current.head);
			current = current.tail;
		}
		return this;
	}
	,contains: function(listener) {
		if(!this.nonEmpty) {
			return false;
		}
		var p = this;
		while(p.nonEmpty) {
			if(Reflect.compareMethods(p.head.listener,listener)) {
				return true;
			}
			p = p.tail;
		}
		return false;
	}
	,find: function(listener) {
		if(!this.nonEmpty) {
			return null;
		}
		var p = this;
		while(p.nonEmpty) {
			if(Reflect.compareMethods(p.head.listener,listener)) {
				return p.head;
			}
			p = p.tail;
		}
		return null;
	}
};
var EventBus = function() { };
EventBus.__name__ = true;
EventBus.init = function() {
	EventBus.signal.add(EventBus.onAnyMessage);
};
EventBus.dispatch = function(message,data) {
	EventBus.signal.dispatch(message,data);
};
EventBus.onAnyMessage = function(message,data) {
	if(!EventBus.listenersMap.exists(message)) {
		return;
	}
	var _g = 0;
	var _g1 = EventBus.listenersMap.get(message);
	while(_g < _g1.length) {
		var callback = _g1[_g];
		++_g;
		callback(data);
	}
};
EventBus.listen = function(message,callback) {
	if(!EventBus.listenersMap.exists(message)) {
		EventBus.listenersMap.set(message,[]);
	}
	EventBus.listenersMap.get(message).push(callback);
};
EventBus.unlisten = function(message,callback) {
	HxOverrides.remove(EventBus.listenersMap.get(message),callback);
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
Lambda.__name__ = true;
Lambda.find = function(it,f) {
	var v = $iterator(it)();
	while(v.hasNext()) {
		var v1 = v.next();
		if(f(v1)) {
			return v1;
		}
	}
	return null;
};
var Main = $hx_exports["Main"] = function() { };
Main.__name__ = true;
Main.main = function() {
	EventBus.init();
	new logic_ContentController();
	ReactDOM.render(React.createElement(App,{ }),window.document.getElementById("app"));
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) {
		return true;
	}
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) {
		return false;
	}
	if(f1.scope == f2.scope && f1.method == f2.method) {
		return f1.method != null;
	} else {
		return false;
	}
};
Reflect.isEnumValue = function(v) {
	if(v != null) {
		return v.__enum__ != null;
	} else {
		return false;
	}
};
var Subsection = function(props,context) {
	React_Component.call(this,props,context);
};
Subsection.__name__ = true;
Subsection.__super__ = React_Component;
Subsection.prototype = $extend(React_Component.prototype,{
	render: function() {
		this.sectionId = this.props.sectionId;
		var classes = "subsection";
		if(this.props.subsection.type == content_NotFound) {
			classes = "subsection" + " disabled";
		}
		var tmp = React.createElement("h4",{ },this.props.subsection.title);
		return React.createElement("div",{ onClick : $bind(this,this.onClick), className : classes},tmp);
	}
	,onClick: function() {
		EventBus.dispatch(event_Message.SetContent,{ type : this.props.subsection.type});
	}
});
var component_MessageWithSelector = function(props,context) {
	React_Component.call(this,props,context);
};
component_MessageWithSelector.__name__ = true;
component_MessageWithSelector.__super__ = React_Component;
component_MessageWithSelector.prototype = $extend(React_Component.prototype,{
	componentWillMount: function() {
		this.setState({ currentIdx : 0, hidden : true});
	}
	,render: function() {
		var msgClass = this.props.right ? "content_phrase" + " right" : "content_phrase";
		var listClass = this.state.hidden ? "selector_content" + " hidden" : "selector_content";
		var classArrowLeft = this.props.right ? "hidden" : "arrow_left";
		var classArrowRight = this.props.right ? "arrow_right" : "hidden";
		var tmp = React.createElement("div",{ className : classArrowLeft});
		var tmp1 = React.createElement("div",{ onClick : $bind(this,this.renderNextValue), className : "msg"},this.props.list[this.state.currentIdx]);
		var tmp2 = React.createElement("div",{ className : classArrowRight});
		var tmp3 = React.createElement(component_SelectorTooltip,{ list : this.props.list, onSetNewEntry : $bind(this,this.setNewEntry), listClass : listClass});
		return React.createElement("li",{ className : msgClass},tmp,tmp1,tmp2,tmp3);
	}
	,setNewEntry: function(node) {
		var newIdx = this.props.list.indexOf(node.id);
		this.setState({ currentIdx : newIdx, hidden : true});
	}
	,renderNextValue: function() {
		this.setState({ currentIdx : this.state.currentIdx, hidden : !this.state.hidden});
	}
});
var component_SelectorTooltip = function(props,context) {
	React_Component.call(this,props,context);
};
component_SelectorTooltip.__name__ = true;
component_SelectorTooltip.__super__ = React_Component;
component_SelectorTooltip.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = { className : this.props.listClass};
		var tmp1 = this.renderEntries();
		return React.createElement("div",tmp,React.createElement("ul",{ className : "selector_list"},tmp1));
	}
	,renderEntries: function() {
		var _g = [];
		var _g1 = 0;
		var _g2 = this.props.list;
		while(_g1 < _g2.length) {
			var entry = _g2[_g1];
			++_g1;
			_g.push(React.createElement("li",{ key : entry, id : entry, onClick : $bind(this,this.setNewEntry), className : "selector_entry"},entry));
		}
		return _g;
	}
	,setNewEntry: function(e) {
		this.props.onSetNewEntry(e.currentTarget);
	}
});
var component_Subtitle = function(props,context) {
	React_Component.call(this,props,context);
};
component_Subtitle.__name__ = true;
component_Subtitle.__super__ = React_Component;
component_Subtitle.prototype = $extend(React_Component.prototype,{
	render: function() {
		return React.createElement("p",{ className : "page_subtitle"},this.props.text);
	}
});
var component_Title = function(props,context) {
	React_Component.call(this,props,context);
};
component_Title.__name__ = true;
component_Title.__super__ = React_Component;
component_Title.prototype = $extend(React_Component.prototype,{
	render: function() {
		return React.createElement("p",{ className : "page_title"},this.props.text);
	}
});
var component_WordSelector = function(props,context) {
	this.currentIdx = 0;
	React_Component.call(this,props,context);
};
component_WordSelector.__name__ = true;
component_WordSelector.__super__ = React_Component;
component_WordSelector.prototype = $extend(React_Component.prototype,{
	componentWillMount: function() {
		var _gthis = this;
		this.list = logic_WordFormatter.getList(this.props.list);
		var currentNounData = Lambda.find(this.list,function(n) {
			return n.value == _gthis.props.value;
		});
		this.currentIdx = this.list.indexOf(currentNounData);
		this.setState({ noun : currentNounData});
	}
	,render: function() {
		var formattedValue = logic_WordFormatter.format(this.state.noun.value,this.props.list,this.props.form,this.props.plural);
		var tmp = React.createElement("div",{ className : "selector_content" + " hidden"});
		return React.createElement("div",{ onClick : $bind(this,this.renderNextValue), className : "word_selector"},formattedValue,tmp);
	}
	,renderNextValue: function() {
		this.currentIdx = this.currentIdx == this.list.length - 1 ? 0 : this.currentIdx + 1;
		this.setState({ noun : this.list[this.currentIdx]});
	}
});
var component_sidebar_LeftMenu = function() {
	React_Component.call(this);
	this.state = { list : [{ id : "function", title : "Function", subsections : [{ id : "greeting", title : "Greetings", type : content_a1_func_Greetings},{ id : "persinfo", title : "Personal Information", type : content_a1_func_PersonalInfo},{ id : "timedate", title : "Time and date", type : content_a1_func_TimeDate},{ id : "prices", title : "Price", type : content_a1_func_Prices},{ id : "direction", title : "Ask for direction", type : content_a1_func_AskDirections},{ id : "ticket", title : "Buying a ticket", type : content_a1_func_BuyTicket},{ id : "cafe", title : "Cafe/bar/restaurant", type : content_a1_func_CafeRestaurant},{ id : "renting", title : "Renting an appartment", type : content_a1_func_RentApartment}]},{ id : "grammar", title : "Grammar", subsections : [{ id : "nounverb", title : "Nouns and verbs", type : content_a1_gram_NounsAndVerbs},{ id : "behave", title : "To be, to have", type : content_a1_gram_ToBeToHave},{ id : "present", title : "Present tense", type : content_a1_gram_PresentTense},{ id : "negative", title : "Negation", type : content_a1_gram_Negation},{ id : "yesno", title : "Yes/No questions", type : content_a1_gram_YesNoQuestions},{ id : "whquestion", title : "Wh-questions", type : content_a1_gram_WhQuestions101},{ id : "andbut", title : "And, but, because", type : content_a1_gram_AndButBecause},{ id : "posession", title : "Posession", type : content_a1_gram_Possession},{ id : "anysome", title : "Quantifiers", type : content_a1_gram_Quantifiers},{ id : "thereis", title : "There is", type : content_a1_gram_ThereIs},{ id : "imperative", title : "Imperative", type : content_a1_gram_Imperative},{ id : "cancant", title : "Can/can't", type : content_a1_gram_CanCant},{ id : "prepplace", title : "Prepositions of place", type : content_a1_gram_PrepPlace},{ id : "preptime", title : "Prepositions of time", type : content_a1_gram_PrepTime},{ id : "prepdir", title : "Prepositions of direction", type : content_a1_gram_PrepDirection},{ id : "pastfutur", title : "Past and future 101", type : content_a1_gram_PastFuture},{ id : "wouldlike", title : "I would like to", type : content_a1_gram_WouldLike},{ id : "intensify", title : "Intensifiers", type : content_a1_gram_Intensifiers},{ id : "compatat", title : "Comparatives/superlatives", type : content_a1_gram_Comparative},{ id : "reflective", title : "Reflective verbs", type : content_a1_gram_Reflective}]},{ id : "vocabulary", title : "Vocabulary", subsections : [{ id : "basicverbs", title : "Verbs of 1st group", type : content_a1_voca_VerbsOfFirstGroup},{ id : "numbers", title : "Numbers", type : content_a1_voca_Numbers},{ id : "datetime", title : "Date & time", type : content_a1_voca_DateTime},{ id : "countries", title : "Countries", type : content_a1_voca_Countries},{ id : "professions", title : "Professions", type : content_a1_voca_Professions},{ id : "colors", title : "Colors", type : content_a1_voca_Colors},{ id : "foodstore", title : "Food", type : content_a1_voca_Food},{ id : "basicadj", title : "Basic adjectives", type : content_a1_voca_Adjectives1},{ id : "directions", title : "Directions in the city", type : content_a1_voca_CityNav},{ id : "clothing", title : "Clothes", type : content_a1_voca_Clothes},{ id : "bustrain", title : "Bus/train station", type : content_a1_voca_TrainStation},{ id : "cafebar", title : "Cafe/bar/restaurant", type : content_a1_voca_CafeBar},{ id : "compliments", title : "Compliments", type : content_a1_voca_Compliments}]}]};
};
component_sidebar_LeftMenu.__name__ = true;
component_sidebar_LeftMenu.__super__ = React_Component;
component_sidebar_LeftMenu.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement("h1",{ },"Level A1");
		var tmp1 = React.createElement("div",{ className : "sidebar_subheader"},tmp);
		var tmp2 = this.mapList();
		var tmp3 = React.createElement("ul",{ className : "sidebar_content"},tmp2);
		return React.createElement("div",{ className : "sidebar"},tmp1,tmp3);
	}
	,mapList: function() {
		var iconsList = ["book.svg","chat.svg","grammar.svg"];
		var _g = [];
		var _g1 = 0;
		var _g2 = this.state.list;
		while(_g1 < _g2.length) {
			var section = _g2[_g1];
			++_g1;
			_g.push(React.createElement(component_sidebar_Level1Button,{ key : section.id, icon : iconsList[this.state.list.indexOf(section)], section : section}));
		}
		return _g;
	}
});
var component_sidebar_Level1Button = function() {
	React_Component.call(this);
	this.state = { visible : false};
};
component_sidebar_Level1Button.__name__ = true;
component_sidebar_Level1Button.__super__ = React_Component;
component_sidebar_Level1Button.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement("img",{ src : "img/" + this.props.icon, className : "section_icon"});
		var tmp1 = React.createElement("h3",{ }," ",this.props.section.title);
		var tmp2 = React.createElement("div",{ onClick : $bind(this,this.toggleVisibility), className : "section_btn"},tmp,tmp1);
		var tmp3 = this.state.visible ? "" : " hidden";
		var tmp4 = this.subsectionsList();
		var tmp5 = React.createElement("div",{ className : "section_container" + tmp3},tmp4);
		return React.createElement("div",{ }," ",tmp2,tmp5);
	}
	,toggleVisibility: function() {
		var newState = { visible : !this.state.visible};
		this.setState(newState);
	}
	,subsectionsList: function() {
		var _g = [];
		var _g1 = 0;
		var _g2 = this.props.section.subsections;
		while(_g1 < _g2.length) {
			var subdata = _g2[_g1];
			++_g1;
			_g.push(React.createElement(Subsection,{ key : subdata.id, subsection : subdata, sectionId : this.props.section.id}));
		}
		return _g;
	}
});
var content_ContentContainer = function() {
	React_Component.call(this);
	EventBus.listen(event_Message.SetView,$bind(this,this.onSetView));
};
content_ContentContainer.__name__ = true;
content_ContentContainer.__super__ = React_Component;
content_ContentContainer.prototype = $extend(React_Component.prototype,{
	componentWillMount: function() {
		this.setState({ componentClass : content_a1_func_Greetings});
	}
	,onSetView: function(data) {
		this.setState({ componentClass : data.componentClass});
	}
	,render: function() {
		return React.createElement(this.state.componentClass);
	}
});
var content_NotFound = function(props,context) {
	React_Component.call(this,props,context);
};
content_NotFound.__name__ = true;
content_NotFound.__super__ = React_Component;
content_NotFound.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement("h3",{ },"Not Found");
		return React.createElement("div",{ className : "content_page"},tmp);
	}
});
var content_a1_func_AskDirections = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_func_AskDirections.__name__ = true;
content_a1_func_AskDirections.__super__ = React_Component;
content_a1_func_AskDirections.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_MessageWithSelector,{ list : ["Est-ce que je peux vous demander mon chemin?","Excusez-moi, je cherche la boulangerie.","Pouvez-vous me dire où ça se trouve?","Pouvez-vous me montrer où ça se trouve?","Où est l'arrêt de bus?","Où est le pont?","Où est l'hôtel?","Dans quelle rue se trouve le cinéma?","Est-ce que l'école est loin d'ici?","Comment est-ce que je vais au musée?","Où est la banque la plus proche?","Est-ce qu'il y a un restaurant à côté?","Où est-ce que je peux trouver la gare?","Comment est-ce qu'on peut aller au centre ville?","Pouvez-vous me dire comment aller à Notre Dame?"]});
		var tmp1 = React.createElement(component_MessageWithSelector,{ list : ["tournez à droite","tout droit","Allez tout droit et vous le trouverez.","Oui, oui, juste tout tout droit","Il faut aller tout droit","Tournez à droite et c'est la première rue à votre gauche.","Traversez le parc"], right : "true"});
		return React.createElement("div",{ className : "content_page"},tmp,tmp1);
	}
});
var content_a1_func_BuyTicket = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_func_BuyTicket.__name__ = true;
content_a1_func_BuyTicket.__super__ = React_Component;
content_a1_func_BuyTicket.prototype = $extend(React_Component.prototype,{
	render: function() {
		return React.createElement("div",{ className : "content_page"},"Bonjour Monsieur, comment puis-je vous aider ? ","Bonjour, un billet pour Lyon s'il-vous-plaît ","D'accord monsieur, aller-simple ou aller-retour?","Vous voulez coin fenêtre ou coin couloir?","Je voudrais le coin fenêtre.","Est-ce un train direct ?","Oui, c'est un train direct. ","une correspondance","Oui, ça fait combien ?","500 Roupies s'il-vous-plaît","The first/last/next train\tLe premier/dernier/prochain train","Is this the right platform for the Paris train?\tEst-ce que c’est le bon quai pour le train de Paris?","First/Second class\tPremière/Seconde classe","Punch your ticket\tComposter de billet","Where can I find a taxi?\tOù est - ce que je peux trouver un taxi?","Je voudrais aller à Strasbourg le 17 janvier dans l’après-midi. Y a-t-il un train vers 13 h 14 h ?","Y a-t-il un point d'argent dans la gare?","les guichets","Une seconde, Mademoiselle. Oui, il y en a mais plus tard, à 15h 30. Ca vous va ?","Oui, oui, ça va. Ce n’est pas trop tard. Est-ce qu’il est direct ?","Il arrive à Strasbourg à quelle heure, s’il vous plaît ?","A 18h15","Ca coûte combien le billet?","Pour Strasbourg dans un express, ça coûte 75 € le billet.","Alors donnez-moi un billet pour un adulte.","Wagon non-fumeur","quelle ligne de métro il faut prendre ?","un aller-retour");
	}
});
var content_a1_func_CafeRestaurant = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_func_CafeRestaurant.__name__ = true;
content_a1_func_CafeRestaurant.__super__ = React_Component;
content_a1_func_CafeRestaurant.prototype = $extend(React_Component.prototype,{
	render: function() {
		return React.createElement("div",{ className : "content_page"},"Je voudrais réserver une table pour trois personnes, pour dîner, s'il vous plaît.","Je voudrais une table pour trois personnes, pour dîner, s'il vous plaît.","Vous avez une reservation?","Non, je n'ai pas de reservation.","Oui, la table est réservé à Fred","Oui, J’ai telephoné hier. Je m’appelle Sue Jones.","Et pour le dîner, que voudriez - vous?","Je voudrais de l'eau.","Je voudrais un verre d'eau.","Et pour dîner, vous avez choisi ?","Je voudrais le menu à 15 Euros.","Je voudrais le steak frites.","Bien Monsieur/Madame, quelle cuisson ?","Bien cuit, s'il vous plaît. Non, à point, s'il vous plaît.","Et, excusez-moi, où sont les toilettes ?","Au sous-sol.","Je ne comprends pas. Vous pouvez répéter s'il vous plaît ?","Vous descendez l'escalier.","Au fond du couloir.","Comment vous trouvez votre steak frites ?","C'est délicieux. C'est parfait.","L'addition s'il vous plaît.","Bien Monsieur / Madame. Vous pouvez payer à la caisse.","Salut ! Je voudrai voir la carte s’il vous plaît.","Donc, une table pour deux personnes et deux bières, s’il vous plaît.","Comment trouvez - vous votre repas?","Voici la carte.","Je vous apporte ca tout de suite.","Je reviens dans un instant pour prendre votre commande.","Est - ce que vous etes pret a commander?","Je prendrai","Laissez - moi prendre votre menu","C'est tres aimable a vous","Tout s'est bien passe?","C'etais delicieux, merci.","Desirez - vous prendre un dessert?","C'est un de nos meilleurs desserts","Je vous lasse quand - meme le menu, pour que vous puissiez choisir","Souhaitez-vous prendre un cafe?","Non, merci, ca sera tout.","Pour moi un café","Acceptez-vous les cartes?");
	}
});
var content_a1_func_Greetings = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_func_Greetings.__name__ = true;
content_a1_func_Greetings.__super__ = React_Component;
content_a1_func_Greetings.prototype = $extend(React_Component.prototype,{
	componentWillMount: function() {
		this.setState({ formality : "", daytime : ""});
		this.phrase1 = ["Bonjour!","Salut!","Bonsoir!"];
		this.phrase2 = ["Comment ça va?","Ça va?","Tu vas bien?","Comment tu vas?","Comment vas-tu?","Comment allez-vous?"];
		this.phrase3 = ["Ça va très bien!","Oui, ça va bien","Comme ci comme ça","Pas tres bien","Pas mal","Non, ça ne va pas","Bien, merci !"];
		this.phrase4 = ["Et vous?","Et tu?"];
		this.phrase5 = ["Bonne journée!","Bonne soirée!","Au revoir!","A bien tot!","À tout à l'heure!","À plus tard!","À plus!","À demain!","À lundi!"];
	}
	,render: function() {
		var tmp = React.createElement(component_MessageWithSelector,{ list : this.phrase1});
		var tmp1 = React.createElement(component_MessageWithSelector,{ list : this.phrase1, right : "true"});
		var tmp2 = React.createElement(component_MessageWithSelector,{ list : this.phrase2, right : "true"});
		var tmp3 = React.createElement(component_MessageWithSelector,{ list : this.phrase3});
		var tmp4 = React.createElement(component_MessageWithSelector,{ list : this.phrase4});
		var tmp5 = React.createElement(component_MessageWithSelector,{ list : this.phrase3, right : "true"});
		var tmp6 = React.createElement(component_MessageWithSelector,{ list : this.phrase5});
		var tmp7 = React.createElement(component_MessageWithSelector,{ list : this.phrase5, right : "true"});
		var tmp8 = React.createElement("ul",{ className : "dialog"},tmp,tmp1,tmp2,tmp3,tmp4,tmp5,tmp6,tmp7);
		var tmp9 = React.createElement("br",{ });
		var tmp10 = React.createElement("br",{ });
		var tmp11 = React.createElement("br",{ });
		var tmp12 = React.createElement("br",{ });
		var tmp13 = React.createElement("br",{ });
		var tmp14 = React.createElement("br",{ });
		var tmp15 = React.createElement("br",{ });
		var tmp16 = React.createElement("br",{ });
		var tmp17 = React.createElement("br",{ });
		return React.createElement("div",{ className : "content_page"},tmp8,"Je ne parle pas francais bien",tmp9,"Desolee, je ne comprends pas",tmp10,"Je ne parle pas francais",tmp11,"Je parle Francais un peu",tmp12,"Parlez vous anglais?",tmp13,"Pouvez vous répéter?",tmp14,"pouvez - vous parler lentement",tmp15,"pouvez - vous parler plus lentement",tmp16,"pourriez-vous parler moins vite?",tmp17);
	}
});
var content_a1_func_PersonalInfo = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_func_PersonalInfo.__name__ = true;
content_a1_func_PersonalInfo.__super__ = React_Component;
content_a1_func_PersonalInfo.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_MessageWithSelector,{ list : ["Comment t'appelle-tu?"]});
		var tmp1 = React.createElement(component_MessageWithSelector,{ list : ["Je m'appelle Arsen."], right : "true"});
		var tmp2 = React.createElement(component_MessageWithSelector,{ list : ["Ou habite tu?"]});
		var tmp3 = React.createElement(component_MessageWithSelector,{ list : ["J'habite a Luxembourg."], right : "true"});
		var tmp4 = React.createElement(component_MessageWithSelector,{ list : ["D'où venez-vous"]});
		var tmp5 = React.createElement(component_MessageWithSelector,{ list : ["Je viens de Russie."], right : "true"});
		var tmp6 = React.createElement(component_MessageWithSelector,{ list : ["Je suis russie."], right : "true"});
		var tmp7 = React.createElement(component_MessageWithSelector,{ list : ["Mais je suis kazakh."], right : "true"});
		var tmp8 = React.createElement(component_MessageWithSelector,{ list : ["Quel âge avez-vous","Quelle âge a tu?"]});
		var tmp9 = React.createElement(component_MessageWithSelector,{ list : ["J'ai 32 ans."], right : "true"});
		var tmp10 = React.createElement(component_MessageWithSelector,{ list : ["Qu'est-ce que tu as diplômé?"]});
		var tmp11 = React.createElement(component_MessageWithSelector,{ list : ["Je suis diplômé de l'université."], right : "true"});
		var tmp12 = React.createElement(component_MessageWithSelector,{ list : ["Es-tu marié?"]});
		var tmp13 = React.createElement(component_MessageWithSelector,{ list : ["Je suis marié."], right : "true"});
		var tmp14 = React.createElement(component_MessageWithSelector,{ list : ["Ma femme s'appelle Mila."], right : "true"});
		var tmp15 = React.createElement(component_MessageWithSelector,{ list : ["Elle a 30 ans."], right : "true"});
		var tmp16 = React.createElement(component_MessageWithSelector,{ list : ["Que fait votre femme?"]});
		var tmp17 = React.createElement(component_MessageWithSelector,{ list : ["Elle est psychothérapeute."], right : "true"});
		var tmp18 = React.createElement(component_MessageWithSelector,{ list : ["Qu'est-ce que tu fais pour travail?","Quel est ton travail?"]});
		var tmp19 = React.createElement(component_MessageWithSelector,{ list : ["Je suis un développeur."], right : "true"});
		var tmp20 = React.createElement(component_MessageWithSelector,{ list : ["Où travaillez-vous? ","Pour qui travaillez-vous ? "]});
		var tmp21 = React.createElement(component_MessageWithSelector,{ list : ["Je travaille a Docler Holding.","Je ne travaille pas","Je cherche un emploi"], right : "true"});
		var tmp22 = React.createElement(component_MessageWithSelector,{ list : ["Avez-vous une voiture?"]});
		var tmp23 = React.createElement(component_MessageWithSelector,{ list : ["J'ai une voiture. C'est une Toyota."], right : "true"});
		var tmp24 = React.createElement(component_MessageWithSelector,{ list : ["Avez-vous des enfants?"]});
		var tmp25 = React.createElement(component_MessageWithSelector,{ list : ["J'ai deux enfants - un fils et une fille."], right : "true"});
		var tmp26 = React.createElement(component_MessageWithSelector,{ list : ["Quelle age ont-ils?"]});
		var tmp27 = React.createElement(component_MessageWithSelector,{ list : ["Ils ont 3 et 7 ans"], right : "true"});
		var tmp28 = React.createElement("ul",{ className : "dialog"},tmp,tmp1,tmp2,tmp3,tmp4,tmp5,tmp6,tmp7,tmp8,tmp9,tmp10,tmp11,tmp12,tmp13,tmp14,tmp15,tmp16,tmp17,tmp18,tmp19,tmp20,tmp21,tmp22,tmp23,tmp24,tmp25,tmp26,tmp27);
		return React.createElement("div",{ className : "content_page"},tmp28);
	}
});
var content_a1_func_Prices = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_func_Prices.__name__ = true;
content_a1_func_Prices.__super__ = React_Component;
content_a1_func_Prices.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_MessageWithSelector,{ list : ["Je peux vous aider?","Monsieur, vous désirez?"]});
		var tmp1 = React.createElement(component_MessageWithSelector,{ list : ["Oui, je voudrais* des fournitures scolaires"], right : "true"});
		var tmp2 = React.createElement(component_MessageWithSelector,{ list : ["Est-ce que c'est tout?","C'est tout?","Avec ceci?","Il vous fallait autre chose?"]});
		var tmp3 = React.createElement(component_MessageWithSelector,{ list : ["Non, ce sera tout.","Oui, ce sera tout"], right : "true"});
		var tmp4 = React.createElement(component_MessageWithSelector,{ list : ["Il y a un lot de stylos à 2 euros, ce n'est pas cher."]});
		var tmp5 = React.createElement(component_MessageWithSelector,{ list : ["C'est trop cher.","C'est très cher."], right : "true"});
		var tmp6 = React.createElement(component_MessageWithSelector,{ list : ["J'ai besoin d'acheter des chaussures."], right : "true"});
		var tmp7 = React.createElement(component_MessageWithSelector,{ list : ["Nous ne vendons pas de chaussures ici."]});
		var tmp8 = React.createElement(component_MessageWithSelector,{ list : ["Il est à combien?","C'est combien?","Combien coûte cette jupe?"], right : "true"});
		var tmp9 = React.createElement(component_MessageWithSelector,{ list : ["C'est 5 euros.","La jupe coûte 3 euros.","Celle-là coûte 5 euros."]});
		var tmp10 = React.createElement(component_MessageWithSelector,{ list : ["C'est moins cher."]});
		var tmp11 = React.createElement(component_MessageWithSelector,{ list : ["Je la prends."], right : "true"});
		var tmp12 = React.createElement(component_MessageWithSelector,{ list : ["Ça fait trente-neuf euros.","C'est trente-neuf euros"]});
		var tmp13 = React.createElement(component_MessageWithSelector,{ list : ["Vous n'auriez pas la monnaie?"]});
		var tmp14 = React.createElement(component_MessageWithSelector,{ list : ["Oui, bien sûr, ici.","Non, désolée."], right : "true"});
		return React.createElement("div",{ className : "content_page"},tmp,tmp1,tmp2,tmp3,tmp4,tmp5,tmp6,tmp7,tmp8,tmp9,tmp10,tmp11,tmp12,tmp13,tmp14);
	}
});
var content_a1_func_RentApartment = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_func_RentApartment.__name__ = true;
content_a1_func_RentApartment.__super__ = React_Component;
content_a1_func_RentApartment.prototype = $extend(React_Component.prototype,{
	render: function() {
		return React.createElement("div",{ className : "content_page"},"Combien coute le louer?","C'est 450 euros par mois, charges comprises","Est - ce que vous exigez une caution?","Je demande une caution equivalente a un mois de loyer","Quand le loyer doit - il etre paye","Le 1re de chaque mois en avance","L'appartement est-il meuble?","Combien de pieces y a-t-il dans l'appartement","Il y a en tout 5 pieces","Est - ce que les animaux domestique sont autorises","Non, malheureusement","Il y a un supermarche a deux minutes d'ici","Je vais prendre l'appartement","Bonjour, je cherche une chambre à louer.  Auriez - vous quelque chose à me proposer ?","Naturellement. Vous cherchez quelques chose de précis ?","Je voudrais un studio près du centre de la ville ou avec des transports en commun à proximité.","Est - ce que vous souhaitez un appartement meublé?","Combien êtes-vous prêt à dépenser en loyer tous les mois ?","Ah, oui ! Je dirais 400 euros. Mais pas plus.","Très bien. J'ai un studio meublé à deux pas de notre agence. ","Si vous pouvez attendre 10 minutes on pourrait aller le visiter tout à l'heure.");
	}
});
var content_a1_func_TimeDate = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_func_TimeDate.__name__ = true;
content_a1_func_TimeDate.__super__ = React_Component;
content_a1_func_TimeDate.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_MessageWithSelector,{ list : ["Quel jour est-ce?","Quel jour est-on?","Quel jour sommes-nous?"]});
		var tmp1 = React.createElement(component_MessageWithSelector,{ list : ["C'est samedi.","On est samedi.","Nous sommes samedi."], right : "true"});
		var tmp2 = React.createElement(component_MessageWithSelector,{ list : ["Quelle date est-il aujourd'hui?","Quelle est la date de ton anniversaire?","Quelle est la date de la Pâques?"]});
		var tmp3 = React.createElement(component_MessageWithSelector,{ list : ["C'est le premier avril.","On est le trente octobre.","Le quatre janvier, deux mill dix sept.","Aujourd'hui, nous sommes le mercredi, trois mai, deux mille dix sept."], right : "true"});
		var tmp4 = React.createElement(component_MessageWithSelector,{ list : ["Quelle heure est-il?"]});
		var tmp5 = React.createElement(component_MessageWithSelector,{ list : ["Il est quatre heures quinze.","Il est cinq heures moins vingt.","Il est vingt trois heures, trente sept minutes et cinquante neuf secondes."], right : "true"});
		var tmp6 = React.createElement(component_MessageWithSelector,{ list : ["Quel jour est la fête?","Quel jour tombe ton anniversaire cette année?"]});
		var tmp7 = React.createElement(component_MessageWithSelector,{ list : ["La fête est samedi.","C'est dimanche."], right : "true"});
		return React.createElement("div",{ className : "content_page"},tmp,tmp1,tmp2,tmp3,tmp4,tmp5,tmp6,tmp7);
	}
});
var content_a1_gram_AndButBecause = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_AndButBecause.__name__ = true;
content_a1_gram_AndButBecause.__super__ = React_Component;
content_a1_gram_AndButBecause.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Conjonctions et prepositions - conjunctions and prepositions"});
		var tmp1 = React.createElement("br",{ });
		var tmp2 = React.createElement("br",{ });
		var tmp3 = React.createElement("br",{ });
		var tmp4 = React.createElement("br",{ });
		var tmp5 = React.createElement("br",{ });
		var tmp6 = React.createElement("br",{ });
		var tmp7 = React.createElement("br",{ });
		var tmp8 = React.createElement("div",{ className : "page_info" + " compact"},"Et - And",tmp1,"Mais - But",tmp2,"Ou - or",tmp3,"Parsque - because",tmp4,"Avec - With",tmp5,"Pour - For",tmp6,"Sans - Without",tmp7,"Par - By");
		return React.createElement("div",{ className : "content_page"},tmp,tmp8);
	}
});
var content_a1_gram_CanCant = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_CanCant.__name__ = true;
content_a1_gram_CanCant.__super__ = React_Component;
content_a1_gram_CanCant.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Modal verb - Can"});
		var tmp1 = React.createElement("p",{ },"Pouvoir - verb of 3rd group, irregular");
		var tmp2 = React.createElement("br",{ });
		var tmp3 = React.createElement("br",{ });
		var tmp4 = React.createElement("br",{ });
		var tmp5 = React.createElement("br",{ });
		var tmp6 = React.createElement("br",{ });
		var tmp7 = React.createElement("br",{ });
		var tmp8 = React.createElement("p",{ className : "page_info" + " " + "two_columns" + " " + "compact"},"Je peux",tmp2,"Tu peux",tmp3,"Il peut",tmp4,"Elle peut",tmp5,"Nous pouvons",tmp6,"Vous pouvez",tmp7,"Ils, elles peuvent");
		var tmp9 = React.createElement("p",{ },"Common question is:");
		var tmp10 = React.createElement("p",{ className : "page_info" + " " + "compact"},"Pouvez-vous?..");
		var tmp11 = React.createElement("p",{ },"WhQuestion for 1st person can be one of these:");
		var tmp12 = React.createElement("p",{ className : "page_info" + " " + "compact"},"Je peux?..","Puis-je?..");
		return React.createElement("div",{ className : "content_page"},tmp,tmp1,tmp8,tmp9,tmp10,tmp11,tmp12);
	}
});
var content_a1_gram_Comparative = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_Comparative.__name__ = true;
content_a1_gram_Comparative.__super__ = React_Component;
content_a1_gram_Comparative.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Comparative and superlative"});
		return React.createElement("div",{ className : "content_page"},tmp,"Comparative and superlative is generally formed by using plus / moin / aussi(autant) ... que.","Je mange plus que toi. - I eat more than you.","Je suis plus heureux que toi. - I am happier than you.","J'ai plus de pomme que toi. - I have more apples than you.","Je suis le plus heureux. - I am the happiest.","Je suis le plus heureux de l'ecole. - I am the happiest in the school.","Il a plus de chats que toi. ","Important exceptions:","Bon - meilleur - le meilleur (but moins bon)","Bien - mieux - le mieux","Mauvais - pire - le pire (for books, only about abstract things)","Petit - moindre - le moindre (for abstract nouns)");
	}
});
var content_a1_gram_Imperative = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_Imperative.__name__ = true;
content_a1_gram_Imperative.__super__ = React_Component;
content_a1_gram_Imperative.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Imperative"});
		var tmp1 = React.createElement("p",{ },"Imperative exists for 2nd person singular, 2nd person plural (also polite version) an1st person plural.");
		var tmp2 = React.createElement("p",{ },"For 2nd person singular we use the present tense form of 1st singular:");
		var tmp3 = React.createElement("p",{ className : "page_example" + " " + "compact"},"Parle! - Speak!");
		var tmp4 = React.createElement("p",{ },"For 2nd person plural we use the present tense form of 2st plural:");
		var tmp5 = React.createElement("p",{ className : "page_example" + " " + "compact"},"Parlez! - Speak! (polite version)");
		var tmp6 = React.createElement("p",{ },"For 1st person plural we use the present tense form of 1st plural:");
		var tmp7 = React.createElement("p",{ className : "page_example"},"Allons au cinéma! - Let's go to the movies!");
		var tmp8 = React.createElement("b",{ },"va");
		var tmp9 = React.createElement("br",{ });
		var tmp10 = React.createElement("b",{ },"sois, soyons, soyez");
		var tmp11 = React.createElement("p",{ className : "page_info"},"Aller -> ",tmp8,", allez, allons",tmp9,"Etre -> ",tmp10);
		return React.createElement("div",{ className : "content_page"},tmp,tmp1,tmp2,tmp3,tmp4,tmp5,tmp6,tmp7,"There are few notable exceptions:",tmp11);
	}
});
var content_a1_gram_Intensifiers = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_Intensifiers.__name__ = true;
content_a1_gram_Intensifiers.__super__ = React_Component;
content_a1_gram_Intensifiers.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Intensifiers"});
		var tmp1 = React.createElement("div",{ },"You are very kind");
		var tmp2 = React.createElement("div",{ },"Vous etes tres gentil!");
		var tmp3 = React.createElement("div",{ },"I speak French a little.");
		var tmp4 = React.createElement("div",{ },"Je parle un peu Francais.");
		var tmp5 = React.createElement("div",{ },"Do you want more beer? - A little.");
		var tmp6 = React.createElement("div",{ },"Voulez-vous plus de bière? - Un peu.");
		return React.createElement("div",{ className : "content_page"},tmp,"Très - Very","Un peu - A bit","Trop - Too","Beaucoup (de) - A lot",tmp1,tmp2,tmp3,tmp4,tmp5,tmp6,"This is too expensive.","C'est trop cher.","I have a lot of money.","J'ai beaucoup d'argent.");
	}
});
var content_a1_gram_Negation = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_Negation.__name__ = true;
content_a1_gram_Negation.__super__ = React_Component;
content_a1_gram_Negation.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Négation - negation"});
		var tmp1 = React.createElement("i",{ },"Object");
		var tmp2 = React.createElement("i",{ },"predicate");
		var tmp3 = React.createElement("p",{ className : "page_info"},tmp1," ne ",tmp2," pas ...");
		var tmp4 = React.createElement("br",{ });
		var tmp5 = React.createElement("p",{ className : "page_example"},"Je ne suis pas un etudiant.",tmp4,"Elle n'est pas une etudiante.");
		var tmp6 = React.createElement("i",{ },"aimer");
		var tmp7 = React.createElement("p",{ className : "page_example"},"Je n'aime pas le chocolat.");
		var tmp8 = React.createElement("i",{ },"avoir");
		var tmp9 = React.createElement("p",{ className : "page_example"},"Je n'ai pas du chocolat.");
		var tmp10 = React.createElement("br",{ });
		var tmp11 = React.createElement("br",{ });
		var tmp12 = React.createElement("br",{ });
		return React.createElement("div",{ className : "content_page"},tmp,"Basic negation for present tense forms like this:",tmp3,tmp5,"With ",tmp6," it's always definitie article:",tmp7,"With ",tmp8," it's always indefinitie article:",tmp9,"Jamais",tmp10,"Personne",tmp11,"Rien",tmp12);
	}
});
var content_a1_gram_NounsAndVerbs = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_NounsAndVerbs.__name__ = true;
content_a1_gram_NounsAndVerbs.__super__ = React_Component;
content_a1_gram_NounsAndVerbs.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Nouns and Verbs"});
		var tmp1 = React.createElement("br",{ });
		var tmp2 = React.createElement("p",{ },"Nouns have two genders - feminine and masculine.",tmp1,"They have different definite and indefinite articles.");
		var tmp3 = React.createElement(component_WordSelector,{ list : "food", value : "pomme", plural : "false", form : "indefinite"});
		var tmp4 = React.createElement("br",{ });
		var tmp5 = React.createElement(component_WordSelector,{ list : "food", value : "pomme", plural : "false", form : "definite"});
		var tmp6 = React.createElement("br",{ });
		var tmp7 = React.createElement("div",{ className : "page_example" + " " + "two_columns" + " " + "compact"},tmp3,"un stylo",tmp4,tmp5,"le stylo",tmp6);
		var tmp8 = React.createElement("p",{ },"Countable plural and uncountable nouns have their own articles.");
		var tmp9 = React.createElement(component_WordSelector,{ list : "food", value : "pomme", plural : "true", form : "definite"});
		var tmp10 = React.createElement("br",{ });
		var tmp11 = React.createElement("div",{ className : "page_example" + " " + "compact"},tmp9,"des pates",tmp10);
		var tmp12 = React.createElement("br",{ });
		var tmp13 = React.createElement("p",{ },"Verbs are splitted in three groups by conjugation type.",tmp12,"Here is first group conjugation.");
		var tmp14 = React.createElement("br",{ });
		var tmp15 = React.createElement("br",{ });
		var tmp16 = React.createElement("br",{ });
		var tmp17 = React.createElement("br",{ });
		var tmp18 = React.createElement("br",{ });
		var tmp19 = React.createElement("br",{ });
		var tmp20 = React.createElement("br",{ });
		var tmp21 = React.createElement("div",{ className : "page_info" + " " + "two_columns" + " " + "compact"},"J'appelle",tmp14,"T'appelles ",tmp15,"Il appelle ",tmp16,"Elle appelle ",tmp17,"Nous appellons ",tmp18,"Vous appellez ",tmp19,"Ils appellent ",tmp20,"Elles appellent");
		return React.createElement("div",{ className : "content_page"},tmp,tmp2,tmp7,tmp8,tmp11,tmp13,tmp21);
	}
});
var content_a1_gram_PastFuture = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_PastFuture.__name__ = true;
content_a1_gram_PastFuture.__super__ = React_Component;
content_a1_gram_PastFuture.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Passe compose et Futur proche"});
		var tmp1 = React.createElement("div",{ },"Basic forms of past and future");
		var tmp2 = React.createElement("div",{ },"The most common form of past is called Passe compose.");
		var tmp3 = React.createElement("div",{ },"It's combined of two verbs - avoir in present tense + past participle form of the verb.");
		var tmp4 = React.createElement("div",{ },"I worked today");
		var tmp5 = React.createElement("div",{ },"J'ai travaille aujourd'hui");
		var tmp6 = React.createElement("div",{ },"For a few verbs you should use etre in present tense instead of aller - usually for the \"verbs of motion\"");
		var tmp7 = React.createElement("div",{ },"I went to Paris last week.");
		var tmp8 = React.createElement("div",{ },"Je suis allé à Paris la semaine dernière.");
		var tmp9 = React.createElement("div",{ },"Future proche - \"close future\" - is formed by aller in present tense + infinitif form of the verb");
		var tmp10 = React.createElement("div",{ },"In this way it's a bit similar to english expression \"going to\"");
		var tmp11 = React.createElement("div",{ },"Je vais travailler aujourd'hui.");
		var tmp12 = React.createElement("div",{ },"I'm going to work today.");
		var tmp13 = React.createElement("div",{ },"Questions are formed with auxilary verb before object");
		var tmp14 = React.createElement("div",{ },"Avez-vous mangé de la pizza la semaine dernière?");
		var tmp15 = React.createElement("div",{ },"Or with est-ce que structure");
		var tmp16 = React.createElement("div",{ },"Est-ce que tu vas manger de la pizza?");
		var tmp17 = React.createElement("div",{ },"For making negative you should wrap auxilary verb with ne ... pas");
		var tmp18 = React.createElement("div",{ },"Je n'ai pas mange de la pizza");
		var tmp19 = React.createElement("div",{ },"Je ne vais pas a Paris.");
		return React.createElement("div",{ className : "content_page"},tmp,tmp1,tmp2,tmp3,tmp4,tmp5,tmp6,tmp7,tmp8,tmp9,tmp10,tmp11,tmp12,tmp13,tmp14,tmp15,tmp16,tmp17,tmp18,tmp19);
	}
});
var content_a1_gram_Possession = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_Possession.__name__ = true;
content_a1_gram_Possession.__super__ = React_Component;
content_a1_gram_Possession.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Possession"});
		var tmp1 = React.createElement("p",{ },"Posessive adjectives reflect gender and quantity of described noun");
		var tmp2 = React.createElement("br",{ });
		var tmp3 = React.createElement("br",{ });
		var tmp4 = React.createElement("br",{ });
		var tmp5 = React.createElement("br",{ });
		var tmp6 = React.createElement("br",{ });
		var tmp7 = React.createElement("p",{ className : "page_info" + " " + "compact"},"mon ma mes",tmp2,"ton ta tes",tmp3,"son sa ses",tmp4,"notre notre nos",tmp5,"votre votre vos",tmp6,"leur leur leurs");
		var tmp8 = React.createElement("br",{ });
		var tmp9 = React.createElement("br",{ });
		var tmp10 = React.createElement("p",{ className : "page_example" + " " + "compact"},"C'est mon stylo.",tmp8,"C'est ma pomme.",tmp9,"C'est mes papiers.");
		return React.createElement("div",{ className : "content_page"},tmp,tmp1,tmp7,tmp10);
	}
});
var content_a1_gram_PrepDirection = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_PrepDirection.__name__ = true;
content_a1_gram_PrepDirection.__super__ = React_Component;
content_a1_gram_PrepDirection.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Prépositions de direction"});
		var tmp1 = React.createElement("div",{ },"à");
		var tmp2 = React.createElement("div",{ },"de");
		return React.createElement("div",{ className : "content_page"},tmp,"These two have a lot of applications and different meanings.",tmp1," - to, at - ",tmp2," - from, out of -","Our office is on the J.F.Kennedy avenue.","I work in Luxembourg.","I am from Russia.","I live at avenue du Bois, 31.");
	}
});
var content_a1_gram_PrepPlace = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_PrepPlace.__name__ = true;
content_a1_gram_PrepPlace.__super__ = React_Component;
content_a1_gram_PrepPlace.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Prépositions de lieu - prepositions of place"});
		var tmp1 = React.createElement("div",{ },"Prepositions of place are important for navigating throught the city.");
		var tmp2 = React.createElement("div",{ },"Sur");
		var tmp3 = React.createElement("div",{ },"Dans");
		var tmp4 = React.createElement("div",{ },"Sous");
		var tmp5 = React.createElement("div",{ },"à côté de");
		var tmp6 = React.createElement("div",{ },"Devant");
		var tmp7 = React.createElement("div",{ },"derrière");
		var tmp8 = React.createElement("div",{ },"entre");
		var tmp9 = React.createElement("div",{ }," près de ");
		return React.createElement("div",{ className : "content_page"},tmp,tmp1,tmp2," - on (some surface) - La vase est sur la table",tmp3," - in, inside - La vase est dans le placard",tmp4," - under - La chaise est sous la table.",tmp5," - next to, beside - la chaise est à côté de la table",tmp6," - In front of - le parc est devant l'immeuble",tmp7," - Behind - La route est derriere l'immeuble",tmp8," - Between - ",tmp9," - close to, by - J'habite près d'ici. ");
	}
});
var content_a1_gram_PrepTime = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_PrepTime.__name__ = true;
content_a1_gram_PrepTime.__super__ = React_Component;
content_a1_gram_PrepTime.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Prépositions de temps - prepositions of time"});
		return React.createElement("div",{ className : "content_page"},tmp,"Dans - before the action will begin","Shop will close in five minutes.","Flight will depart in one hour.","I go on vacation on Friday.","A - time at which an event occurs","We eat at 8:00 Nous mangeons à 8h00.","Avant","Apres","Pendant","Jusqu'a");
	}
});
var content_a1_gram_PresentTense = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_PresentTense.__name__ = true;
content_a1_gram_PresentTense.__super__ = React_Component;
content_a1_gram_PresentTense.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Présent - Present tense"});
		var tmp1 = React.createElement("div",{ },"If you can conjugate a verb, you can create a sentence in the present tense.");
		var tmp2 = React.createElement("br",{ });
		var tmp3 = React.createElement("div",{ }," J'ai une pomme.");
		var tmp4 = React.createElement("br",{ });
		var tmp5 = React.createElement("div",{ },"Elle est etudiante.");
		return React.createElement("div",{ className : "content_page"},tmp,tmp1,tmp2,tmp3,tmp4,tmp5);
	}
});
var content_a1_gram_Quantifiers = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_Quantifiers.__name__ = true;
content_a1_gram_Quantifiers.__super__ = React_Component;
content_a1_gram_Quantifiers.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Quantifiers"});
		var tmp1 = React.createElement("i",{ },"de");
		var tmp2 = React.createElement("br",{ });
		var tmp3 = React.createElement("br",{ });
		var tmp4 = React.createElement("br",{ });
		var tmp5 = React.createElement("br",{ });
		var tmp6 = React.createElement("br",{ });
		var tmp7 = React.createElement("p",{ className : "page_example"},"Je voudrais un poulet.",tmp3,"I would like a chicken. (Whole chicken!)",tmp4,tmp5,"Je voudrais du poulet.",tmp6,"I would like some chicken.");
		var tmp8 = React.createElement("br",{ });
		var tmp9 = React.createElement("p",{ className : "page_example"},"Do you have any pizza?",tmp8,"Avez-vous de la pizza?");
		var tmp10 = React.createElement("i",{ },"de");
		var tmp11 = React.createElement("br",{ });
		var tmp12 = React.createElement("p",{ className : "page_example"},"I don't have any pizza.",tmp11,"Je n'ai pas de pizza.");
		return React.createElement("div",{ className : "content_page"},tmp,"Indefinite amount is expressed with ",tmp1,".",tmp2,tmp7,"The same is for the question:",tmp9,"But for negation it's just ",tmp10," without article",tmp12);
	}
});
var content_a1_gram_Reflective = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_Reflective.__name__ = true;
content_a1_gram_Reflective.__super__ = React_Component;
content_a1_gram_Reflective.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Reflexive verbs"});
		return React.createElement("div",{ className : "content_page"},tmp,"Reflexive verbs consist of reflexive particle se + verb.","Laver - to wash","Se laver - to wash yourself","Particle se is conjugated:","Je me lave","Tu te laves","Il se lave","Nous nous lavons","Vous vous lavez","Ils se lavent","Passe compose is tricky - reflexive particle comes before auxilary verb.","Je me suis lavé les dents.","Tu t'es lavé les dents","Negation wraps both particle and auxilary verb","Je ne me suis pas lave les dents.","Invertive questions for reflexive verbs are rarely used in spoken language, ","it's perfectly fine to use Est-ce que or direct order with interrogative intonation.","But just FYI, inn invertive question reflexive particle sticks to auxilary verb","T'es-tu lave les dents?");
	}
});
var content_a1_gram_ThereIs = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_ThereIs.__name__ = true;
content_a1_gram_ThereIs.__super__ = React_Component;
content_a1_gram_ThereIs.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Il y a - There is"});
		var tmp1 = React.createElement("p",{ },"French expression for \"there is\" is \"Il y a...\"");
		var tmp2 = React.createElement("br",{ });
		var tmp3 = React.createElement("p",{ className : "page_example"},"Il y a un parc près de l'église.",tmp2,"There is a park near the church.");
		var tmp4 = React.createElement("p",{ },"Question form is \"Y-a-t il?..\"");
		var tmp5 = React.createElement("br",{ });
		var tmp6 = React.createElement("p",{ className : "page_example"},"Y a-t-il un parc derrière la place?",tmp5,"Is there a park behind the square");
		var tmp7 = React.createElement("p",{ },"Negative form is \"Il n'y a pas de...\"");
		var tmp8 = React.createElement("br",{ });
		var tmp9 = React.createElement("p",{ className : "page_example"},"Il n'y a pas de parc dans la ville.",tmp8,"There is no park in the city.");
		var tmp10 = React.createElement("br",{ });
		var tmp11 = React.createElement("br",{ });
		var tmp12 = React.createElement("br",{ });
		var tmp13 = React.createElement("p",{ className : "comment"},"In this expression \"Il\" is a third person preposition.",tmp10,"\"Y\" is a preposition of place, that roughly means \"there\".",tmp11,"\"A\" is a third form of avoir - to have.",tmp12,"So in total it can be understood as \"It has there...\"");
		return React.createElement("div",{ className : "content_page"},tmp,tmp1,tmp3,tmp4,tmp6,tmp7,tmp9,tmp13);
	}
});
var content_a1_gram_ToBeToHave = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_ToBeToHave.__name__ = true;
content_a1_gram_ToBeToHave.__super__ = React_Component;
content_a1_gram_ToBeToHave.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Etre and avoir"});
		var tmp1 = React.createElement("p",{ },"These are two most important verbs.");
		var tmp2 = React.createElement(component_Subtitle,{ text : "etre - to be"});
		var tmp3 = React.createElement("br",{ });
		var tmp4 = React.createElement("br",{ });
		var tmp5 = React.createElement("br",{ });
		var tmp6 = React.createElement("br",{ });
		var tmp7 = React.createElement("br",{ });
		var tmp8 = React.createElement("br",{ });
		var tmp9 = React.createElement("br",{ });
		var tmp10 = React.createElement("p",{ className : "page_info" + " " + "two_columns" + " " + "compact"},"Je suis ",tmp3,"Tu es ",tmp4,"Il est ",tmp5,"Elle est ",tmp6,"Nous sommes ",tmp7,"Vous etez ",tmp8,"Ils sont ",tmp9,"Elles sont");
		var tmp11 = React.createElement("p",{ className : "page_example" + " " + "compact"},"Je suis une pomme.");
		var tmp12 = React.createElement(component_Subtitle,{ text : "avoir - to have"});
		var tmp13 = React.createElement("br",{ });
		var tmp14 = React.createElement("br",{ });
		var tmp15 = React.createElement("br",{ });
		var tmp16 = React.createElement("br",{ });
		var tmp17 = React.createElement("br",{ });
		var tmp18 = React.createElement("br",{ });
		var tmp19 = React.createElement("br",{ });
		var tmp20 = React.createElement("p",{ className : "page_info" + " " + "two_columns" + " " + "compact"},"J'ai ",tmp13,"Tu as ",tmp14,"Il a ",tmp15,"Elle a ",tmp16,"Nous avons ",tmp17,"Vous avez ",tmp18,"Ils ont ",tmp19,"Elles ont");
		var tmp21 = React.createElement("p",{ className : "page_example" + " " + "compact"},"J'ai une pomme.");
		return React.createElement("div",{ className : "content_page"},tmp,tmp1,tmp2,tmp10,tmp11,tmp12,tmp20,tmp21);
	}
});
var content_a1_gram_WhQuestions101 = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_WhQuestions101.__name__ = true;
content_a1_gram_WhQuestions101.__super__ = React_Component;
content_a1_gram_WhQuestions101.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Mots interrogatifs - questions words"});
		var tmp1 = React.createElement("div",{ },"Who, what, when, where, why, how?");
		var tmp2 = React.createElement("div",{ },"Qui, que, quand, ou, pourqoi, comment?");
		var tmp3 = React.createElement("br",{ });
		var tmp4 = React.createElement("div",{ },"There are a lot of tricky things, but common rule is this",tmp3,"Questioin word comes first, then predicat, then object.");
		return React.createElement("div",{ className : "content_page"},tmp,tmp1,tmp2,tmp4,"Qui est le patron?","Qu'est-ce que c'est?","Quand arrivez-vous?","Où manges - tu des pommes?","Pourquoi achetez-vous des livres?","Comment est le temps?","Quel, quoi");
	}
});
var content_a1_gram_WouldLike = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_WouldLike.__name__ = true;
content_a1_gram_WouldLike.__super__ = React_Component;
content_a1_gram_WouldLike.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Would like to"});
		var tmp1 = React.createElement("div",{ },"I would like to");
		var tmp2 = React.createElement("div",{ },"Je voudrais + infinitiv");
		var tmp3 = React.createElement("div",{ },"I would like to open an account");
		var tmp4 = React.createElement("div",{ },"Je voudrais ouvrir un compte");
		var tmp5 = React.createElement("div",{ },"Do you want to open an account");
		var tmp6 = React.createElement("div",{ },"Voulez-vous ouvrir un compte?");
		var tmp7 = React.createElement("div",{ },"Voudriez-vous ouvrir un compte?");
		return React.createElement("div",{ className : "content_page"},tmp,"It is useful to know this expression for everyday life, though grammar behind it is a bit complicated.",tmp1,tmp2,tmp3,tmp4,"In question it's usually:",tmp5,tmp6,"But for an extremely polite version it can be",tmp7);
	}
});
var content_a1_gram_YesNoQuestions = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_gram_YesNoQuestions.__name__ = true;
content_a1_gram_YesNoQuestions.__super__ = React_Component;
content_a1_gram_YesNoQuestions.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Oui/non - yes/no questions"});
		var tmp1 = React.createElement("p",{ },"1. The same word order, but just with question intonation:");
		var tmp2 = React.createElement("p",{ className : "page_example"},"Vous aimez les pommes?");
		var tmp3 = React.createElement("p",{ },"2. Add \"Est-ce que\" at the beginning:");
		var tmp4 = React.createElement("p",{ className : "page_example"},"Est-ce que vous aimez les pommes?");
		var tmp5 = React.createElement("p",{ },"3. Invertive - when predicate goes before object:");
		var tmp6 = React.createElement("p",{ className : "page_example"},"Aimez vous les pommes?");
		return React.createElement("div",{ className : "content_page"},tmp,"There are three ways to ask yes/no question:",tmp1,tmp2,tmp3,tmp4,tmp5,tmp6);
	}
});
var content_a1_voca_Adjectives1 = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_voca_Adjectives1.__name__ = true;
content_a1_voca_Adjectives1.__super__ = React_Component;
content_a1_voca_Adjectives1.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Food"});
		var tmp1 = React.createElement("br",{ });
		var tmp2 = React.createElement("br",{ });
		var tmp3 = React.createElement("br",{ });
		var tmp4 = React.createElement("br",{ });
		var tmp5 = React.createElement("br",{ });
		var tmp6 = React.createElement("br",{ });
		var tmp7 = React.createElement("br",{ });
		var tmp8 = React.createElement("br",{ });
		var tmp9 = React.createElement("br",{ });
		var tmp10 = React.createElement("br",{ });
		var tmp11 = React.createElement("br",{ });
		var tmp12 = React.createElement("br",{ });
		var tmp13 = React.createElement("br",{ });
		var tmp14 = React.createElement("br",{ });
		var tmp15 = React.createElement("br",{ });
		var tmp16 = React.createElement("br",{ });
		var tmp17 = React.createElement("br",{ });
		var tmp18 = React.createElement("br",{ });
		var tmp19 = React.createElement("br",{ });
		var tmp20 = React.createElement("br",{ });
		var tmp21 = React.createElement("br",{ });
		var tmp22 = React.createElement("br",{ });
		var tmp23 = React.createElement("br",{ });
		var tmp24 = React.createElement("br",{ });
		var tmp25 = React.createElement("br",{ });
		var tmp26 = React.createElement("br",{ });
		var tmp27 = React.createElement("br",{ });
		var tmp28 = React.createElement("br",{ });
		var tmp29 = React.createElement("br",{ });
		var tmp30 = React.createElement("br",{ });
		var tmp31 = React.createElement("br",{ });
		var tmp32 = React.createElement("br",{ });
		var tmp33 = React.createElement("br",{ });
		var tmp34 = React.createElement("br",{ });
		var tmp35 = React.createElement("br",{ });
		var tmp36 = React.createElement("br",{ });
		var tmp37 = React.createElement("br",{ });
		var tmp38 = React.createElement("br",{ });
		var tmp39 = React.createElement("br",{ });
		var tmp40 = React.createElement("br",{ });
		var tmp41 = React.createElement("br",{ });
		var tmp42 = React.createElement("br",{ });
		var tmp43 = React.createElement("br",{ });
		var tmp44 = React.createElement("br",{ });
		var tmp45 = React.createElement("br",{ });
		var tmp46 = React.createElement("br",{ });
		var tmp47 = React.createElement("br",{ });
		var tmp48 = React.createElement("br",{ });
		var tmp49 = React.createElement("br",{ });
		var tmp50 = React.createElement("br",{ });
		var tmp51 = React.createElement("br",{ });
		var tmp52 = React.createElement("br",{ });
		var tmp53 = React.createElement("br",{ });
		var tmp54 = React.createElement("br",{ });
		var tmp55 = React.createElement("div",{ className : "two_columns"},"petit\tsmall, short ",tmp1,"grand\tlarge, tall ",tmp2,"jeune\tyoung ",tmp3,"vieux\told (masculine) ",tmp4,"vieille\told (feminine) ",tmp5,"beau\thandsome; beautiful (with masculine noun) ",tmp6,"belle\tbeautiful (with feminine person or noun) ",tmp7,"fort\tstrong ",tmp8,"faible\tweak (person, object) ",tmp9,"froid\tcold ",tmp10,"chaud\thot ",tmp11,"bien chaud\twarm ",tmp12,"long\tlong ",tmp13,"court\tshort ",tmp14,"clair\tclear, bright (light); thin (soup etc) ",tmp15,"bas\tlow ",tmp16,"haut\thigh, tall ",tmp17,"propre\tclean ",tmp18,"sale\tdirty ",tmp19,"plein\tfull ",tmp20,"sec\tdry ",tmp21,"bon\tgood; right ",tmp22,"faux\twrong, untrue, false ",tmp23,"mauvais\tbad; wrong ",tmp24,"nouveau\tnew ",tmp25,"proche\tnear ",tmp26,"facile\teasy ",tmp27,"difficile\tdifficult ",tmp28,"pauvre\tpoor ",tmp29,"riche\trich ",tmp30,"cher\tdear, beloved; expensive ",tmp31,"heureux\thappy ",tmp32,"content\thappy, satisfied ",tmp33,"fatigué\ttired ",tmp34,"triste\tsad, unhappy ",tmp35,"sain\thealthy ",tmp36,"malade\till ",tmp37,"gentil\tkind, nice ",tmp38,"sympathique\tnice, friendly ",tmp39,"autre\tdistinct, different; supplementary; other ",tmp40,"dernier\tlast, final; previous ",tmp41,"doux\tsoft, smooth ",tmp42,"drôle\tcomical, funny, amusing ",tmp43,"étrange\tstrange, odd ",tmp44,"gentil\tkind, nice, sweet ",tmp45,"grand\ttall, big, large, long ",tmp46,"important\timportant ",tmp47,"intéressant\tinteresting ",tmp48,"joli\tpretty, lovely, nice ",tmp49,"même\tsame ",tmp50,"seul\talone, lonely, lonesome ",tmp51,"timide\tshy ",tmp52,"tout\tall (the), the whole ",tmp53,"tranquille\tquiet, peaceful ",tmp54,"vrai\ttrue; genuine, real");
		return React.createElement("div",{ className : "content_page"},tmp,tmp55);
	}
});
var content_a1_voca_CafeBar = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_voca_CafeBar.__name__ = true;
content_a1_voca_CafeBar.__super__ = React_Component;
content_a1_voca_CafeBar.prototype = $extend(React_Component.prototype,{
	render: function() {
		return React.createElement("div",{ className : "content_page"},"commander - to order","choisir - to choose","écouter - to listen","prendre - to take (to have)","terminer - to finish","végétarien / végétarienne","végétalien / végétalienne","le serveur / la serveuse","le / la chef","la carte","désirer","rien","faire une réservation","la carte","le menu","où sont les toilettes ?","Au sous - sol.","Vous descendez l'escalier.","l'addition / la facture","Je n'en peux plus","J'ai bien / trop mangé ","Un verre de ");
	}
});
var content_a1_voca_CityNav = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_voca_CityNav.__name__ = true;
content_a1_voca_CityNav.__super__ = React_Component;
content_a1_voca_CityNav.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Food"});
		var tmp1 = React.createElement("div",{ className : "two_columns"},"trouver  - to find","traverser - to cross","tourner - to turn","aller - to go ","Prendre - to take","Suivre - follow","Garer - to park","montrer - to show","à gauche - to the left","à droite - to the right","tout droit - straight ahead","Au bout de - at the end of","Au début de - at the beginning of","devant - in front of","derriere - behind","En face de = opposite to ","A coté de - next to","au nord","au sud","a l'est","a l'ouest","en bas - down","en haut - up","jusqu’au - up to","là-bas - over there","La prochaine rue à gauche - next street to the left","piétone - pedestrian","rond-point - traffic circle","La rue - the street","La chemin - road, way","Le coin - the corner","l'eglise - the church","la gare - railway station","L'hôpital - hospital","Le parc","La mairie, hotel de ville ","Les toilettes publiques\t","Le centre ville","Le bar","Le cafe","le pont","le cinéma ","L'université","le métro","Le Musée","Le marché","le supermarché","la banque - bank","boulangerie - bakery","Par autobus","par voture","Par train","À pied","Ce n'est pas loin - It's not far.","c'est près - it's nearby","C'est près d'ici - it's close by");
		return React.createElement("div",{ className : "content_page"},tmp,tmp1);
	}
});
var content_a1_voca_Clothes = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_voca_Clothes.__name__ = true;
content_a1_voca_Clothes.__super__ = React_Component;
content_a1_voca_Clothes.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Les vetements - Clothes"});
		var tmp1 = React.createElement("br",{ });
		var tmp2 = React.createElement("br",{ });
		var tmp3 = React.createElement("br",{ });
		var tmp4 = React.createElement("br",{ });
		var tmp5 = React.createElement("br",{ });
		var tmp6 = React.createElement("br",{ });
		var tmp7 = React.createElement("br",{ });
		var tmp8 = React.createElement("br",{ });
		var tmp9 = React.createElement("br",{ });
		var tmp10 = React.createElement("br",{ });
		var tmp11 = React.createElement("br",{ });
		var tmp12 = React.createElement("br",{ });
		var tmp13 = React.createElement("br",{ });
		var tmp14 = React.createElement("br",{ });
		var tmp15 = React.createElement("br",{ });
		var tmp16 = React.createElement("br",{ });
		var tmp17 = React.createElement("br",{ });
		var tmp18 = React.createElement("br",{ });
		var tmp19 = React.createElement("br",{ });
		var tmp20 = React.createElement("br",{ });
		var tmp21 = React.createElement("br",{ });
		var tmp22 = React.createElement("br",{ });
		var tmp23 = React.createElement("br",{ });
		var tmp24 = React.createElement("br",{ });
		var tmp25 = React.createElement("div",{ className : "two_columns"},"choisir - to choose","porter - to wear","essayer - to try","taille - size","Un manteau : coat ",tmp1,"Une veste : jacket ",tmp2,"Un pull : a sweater ",tmp3,"Une chemise : a shirt ",tmp4,"Une chemise à manches courtes ",tmp5,"Une chemise à manches longues ",tmp6,"Une blouse : a lady’s shirt ",tmp7,"Un T - shirt ",tmp8,"Un pantalon : pants ",tmp9,"Un jean : jeans ",tmp10,"Un short : shorts ",tmp11,"Une robe ",tmp12,"Une robe du soir ",tmp13,"Une jupe ",tmp14,"Une mini-jupe ",tmp15,"la cravate tie ",tmp16,"la ceinture belt ",tmp17,"les chaussettes (f) socks ",tmp18,"les bottes (f) boots ",tmp19,"les tennis (m) sneakers / trainer ",tmp20,"chapeau hat ",tmp21,"gants gloves ",tmp22,"culotte panties ",tmp23,"le slip man pants ",tmp24,"le caleçon underwear");
		return React.createElement("div",{ className : "content_page"},tmp,tmp25);
	}
});
var content_a1_voca_Colors = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_voca_Colors.__name__ = true;
content_a1_voca_Colors.__super__ = React_Component;
content_a1_voca_Colors.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Les couleurs - Colors"});
		var tmp1 = React.createElement("br",{ });
		var tmp2 = React.createElement("br",{ });
		var tmp3 = React.createElement("br",{ });
		var tmp4 = React.createElement("br",{ });
		var tmp5 = React.createElement("br",{ });
		var tmp6 = React.createElement("br",{ });
		var tmp7 = React.createElement("br",{ });
		var tmp8 = React.createElement("br",{ });
		var tmp9 = React.createElement("br",{ });
		var tmp10 = React.createElement("br",{ });
		var tmp11 = React.createElement("br",{ });
		var tmp12 = React.createElement("br",{ });
		return React.createElement("div",{ className : "content_page"},tmp,"brown - marron ",tmp1,"red - rouge ",tmp2,"orange - orange ",tmp3,"yellow - jaune ",tmp4,"green - vert ",tmp5,"blue - bleu ",tmp6,"purple - violet ",tmp7,"pink - rose ",tmp8,"white - blanc/blanche ",tmp9,"grey - gris ",tmp10,"black - noir ",tmp11,"light blue - bleu clair ",tmp12,"dark blue - bleu foncé");
	}
});
var content_a1_voca_Compliments = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_voca_Compliments.__name__ = true;
content_a1_voca_Compliments.__super__ = React_Component;
content_a1_voca_Compliments.prototype = $extend(React_Component.prototype,{
	render: function() {
		return React.createElement("div",{ className : "content_page"},"Les compléments","Tu es très jolie.","Je t'aime.","Je t'adore.","Ma belle","mon cœur","Je pense à toi.","Que tu es belle !","Le grand amour","Vous etes vraiment belle","Je vous trouve magnifique ","Je suis etourdi par votre beaute","Je suis étourdi par ta beauté","Votre sourire est un don","Mon coeur ne bat que pour toi","Je t'aime de tout mon coeur, tout mon ame, tout mon etre","Tu es la femme la plus belle au monde, il n'y a pas de mots pour le dire","Je pourrais rester heureux toute ma vie, tant que vous êtes à mes côtés","Tu es drôle.","Tu es mignonne.","Tu es la fille de mes rêves.","Tu es l'amour de ma vie.","Est - ce que tu es aussi doux que tes yeux?","ma petite chatte","ma petite chaton");
	}
});
var content_a1_voca_Countries = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_voca_Countries.__name__ = true;
content_a1_voca_Countries.__super__ = React_Component;
content_a1_voca_Countries.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Countries and nationalities"});
		var tmp1 = React.createElement("br",{ });
		var tmp2 = React.createElement("br",{ });
		var tmp3 = React.createElement("br",{ });
		var tmp4 = React.createElement("br",{ });
		var tmp5 = React.createElement("br",{ });
		var tmp6 = React.createElement("br",{ });
		var tmp7 = React.createElement("br",{ });
		var tmp8 = React.createElement("br",{ });
		var tmp9 = React.createElement("br",{ });
		var tmp10 = React.createElement("br",{ });
		var tmp11 = React.createElement("br",{ });
		var tmp12 = React.createElement("br",{ });
		var tmp13 = React.createElement("br",{ });
		var tmp14 = React.createElement("br",{ });
		var tmp15 = React.createElement("br",{ });
		var tmp16 = React.createElement("br",{ });
		var tmp17 = React.createElement("br",{ });
		var tmp18 = React.createElement("br",{ });
		var tmp19 = React.createElement("br",{ });
		var tmp20 = React.createElement("br",{ });
		var tmp21 = React.createElement("br",{ });
		var tmp22 = React.createElement("br",{ });
		var tmp23 = React.createElement("br",{ });
		var tmp24 = React.createElement("br",{ });
		var tmp25 = React.createElement("br",{ });
		var tmp26 = React.createElement("br",{ });
		var tmp27 = React.createElement("br",{ });
		var tmp28 = React.createElement("br",{ });
		var tmp29 = React.createElement("br",{ });
		var tmp30 = React.createElement("p",{ className : "page_example"},"I'm from Russia.",tmp27,"Je viens de Russie.",tmp28,"I am Russian.",tmp29,"Je suis Russe.");
		return React.createElement("div",{ className : "content_page"},tmp,"Belarus\t- la Biélorussie ",tmp1,"Belgium\t- la Belgique Belge ",tmp2,"Canada - le Canada - Canadien(ne) ",tmp3,"China\t- la Chine - Chinois(e) ",tmp4,"Czech Republic - la République tchèque  ",tmp5,"England\t- l'Angleterre (f) - Anglais(e) ",tmp6,"Estonia\t- l'Estonie (f) ",tmp7,"France - la France  - Français(e) ",tmp8,"Germany\t- l'Allemagne (f) - Allemand(e) ",tmp9,"Hungary\t- la Hongrie  ",tmp10,"India\t- l'Inde (f) - Indien(ne) ",tmp11,"Italy\t- l'Italie (f) - Italien(ne) ",tmp12,"Japan\t- le Japon  - Japonais(e) ",tmp13,"Kazakhstan\t- le Kazakhstan ",tmp14,"Latvia\t- la Lettonie  ",tmp15,"Luxembourg\t- le Luxembourg ",tmp16,"Moldavia\t- la Moldavie ",tmp17,"Netherlands\t- les Pays-Bas  - Néerlandais(e) ",tmp18,"North Korea\t- la Corée du Nord  ",tmp19,"Poland\t- la Pologne  \t- Polonais(e) ",tmp20," ","Portugal - le Portugal - Portugais(e) ",tmp21,"Russia\t- la Russie  - Russe ",tmp22,"Slovakia - la Slovaquie  ",tmp23,"Spain\t- l'Espagne (f) - Espagnol(e) ",tmp24,"Ukraine\t- l'Ukraine (f) ",tmp25,"United Kingdom\t- le Royaume-Uni  ",tmp26,"United States - les États - Unis (m) - Américain(e)",tmp30);
	}
});
var content_a1_voca_DateTime = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_voca_DateTime.__name__ = true;
content_a1_voca_DateTime.__super__ = React_Component;
content_a1_voca_DateTime.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Subtitle,{ text : "General vocabulary"});
		var tmp1 = React.createElement("br",{ });
		var tmp2 = React.createElement("br",{ });
		var tmp3 = React.createElement("br",{ });
		var tmp4 = React.createElement("br",{ });
		var tmp5 = React.createElement("br",{ });
		var tmp6 = React.createElement("br",{ });
		var tmp7 = React.createElement("br",{ });
		var tmp8 = React.createElement("br",{ });
		var tmp9 = React.createElement("br",{ });
		var tmp10 = React.createElement("br",{ });
		var tmp11 = React.createElement("br",{ });
		var tmp12 = React.createElement("br",{ });
		var tmp13 = React.createElement("br",{ });
		var tmp14 = React.createElement("br",{ });
		var tmp15 = React.createElement("br",{ });
		var tmp16 = React.createElement("br",{ });
		var tmp17 = React.createElement("br",{ });
		var tmp18 = React.createElement("br",{ });
		var tmp19 = React.createElement("div",{ className : "two_columns"},"une seconde ",tmp1,"une minute ",tmp2,"une heure ",tmp3,"un jour / la journée - day ",tmp4,"un matin - morning ",tmp5,"midi ",tmp6,"un soir / la soirée- evening ",tmp7,"une nuit - night ",tmp8,"minuit ",tmp9,"une semaine - week ",tmp10,"un mois - month ",tmp11,"l'an / l'année - year ",tmp12,"le ciecle - century  ",tmp13,"l'hiver - winter ",tmp14,"le printemps - spring ",tmp15,"l'été - summer ",tmp16,"l'autumne - autumn ",tmp17,"les jours de travail ",tmp18,"le weekend");
		var tmp20 = React.createElement(component_Subtitle,{ text : "Months"});
		var tmp21 = React.createElement("br",{ });
		var tmp22 = React.createElement("br",{ });
		var tmp23 = React.createElement("br",{ });
		var tmp24 = React.createElement("br",{ });
		var tmp25 = React.createElement("br",{ });
		var tmp26 = React.createElement("br",{ });
		var tmp27 = React.createElement("br",{ });
		var tmp28 = React.createElement("br",{ });
		var tmp29 = React.createElement("br",{ });
		var tmp30 = React.createElement("br",{ });
		var tmp31 = React.createElement("br",{ });
		var tmp32 = React.createElement("div",{ className : "two_columns"},"janvier ",tmp21,"fevrier ",tmp22,"mars ",tmp23,"avril ",tmp24,"mai ",tmp25,"join ",tmp26,"juillet ",tmp27,"août ",tmp28,"septembre ",tmp29,"octobre ",tmp30,"novembre ",tmp31,"decembre");
		var tmp33 = React.createElement(component_Subtitle,{ text : "Days of the week"});
		var tmp34 = React.createElement("br",{ });
		var tmp35 = React.createElement("br",{ });
		var tmp36 = React.createElement("br",{ });
		var tmp37 = React.createElement("br",{ });
		var tmp38 = React.createElement("br",{ });
		var tmp39 = React.createElement("br",{ });
		var tmp40 = React.createElement("div",{ className : "two_columns"},"lundi ",tmp34,"mardi ",tmp35,"mercredi ",tmp36,"jeudi ",tmp37,"vendredi ",tmp38,"samedi ",tmp39,"dimanche");
		return React.createElement("div",{ className : "content_page"},tmp,tmp19,tmp20,tmp32,tmp33,tmp40);
	}
});
var content_a1_voca_Food = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_voca_Food.__name__ = true;
content_a1_voca_Food.__super__ = React_Component;
content_a1_voca_Food.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Food"});
		var tmp1 = React.createElement("br",{ });
		var tmp2 = React.createElement("br",{ });
		var tmp3 = React.createElement("br",{ });
		var tmp4 = React.createElement("br",{ });
		var tmp5 = React.createElement("br",{ });
		var tmp6 = React.createElement("br",{ });
		var tmp7 = React.createElement("br",{ });
		var tmp8 = React.createElement("br",{ });
		var tmp9 = React.createElement("div",{ className : "two_columns"},"manger     to eat ",tmp1,"dîner     to have dinner ",tmp2,"déjeuner     to have breakfast or lunch ",tmp3,"avoir faim     to be hungry ",tmp4,"gouter to taste, to try ",tmp5,"boire to drink ",tmp6,"le petit-déjeuner     breakfast ",tmp7,"le déjeuner     lunch ",tmp8,"le dîner     dinner","végétarien vegetarian");
		var tmp10 = React.createElement("br",{ });
		var tmp11 = React.createElement("br",{ });
		var tmp12 = React.createElement("br",{ });
		var tmp13 = React.createElement("br",{ });
		var tmp14 = React.createElement("br",{ });
		var tmp15 = React.createElement("br",{ });
		var tmp16 = React.createElement("br",{ });
		var tmp17 = React.createElement("br",{ });
		var tmp18 = React.createElement("br",{ });
		var tmp19 = React.createElement("br",{ });
		var tmp20 = React.createElement("br",{ });
		var tmp21 = React.createElement("br",{ });
		var tmp22 = React.createElement("br",{ });
		var tmp23 = React.createElement("br",{ });
		var tmp24 = React.createElement("br",{ });
		var tmp25 = React.createElement("br",{ });
		var tmp26 = React.createElement("br",{ });
		var tmp27 = React.createElement("br",{ });
		var tmp28 = React.createElement("br",{ });
		var tmp29 = React.createElement("br",{ });
		var tmp30 = React.createElement("br",{ });
		var tmp31 = React.createElement("br",{ });
		var tmp32 = React.createElement("br",{ });
		var tmp33 = React.createElement("br",{ });
		var tmp34 = React.createElement("br",{ });
		var tmp35 = React.createElement("br",{ });
		var tmp36 = React.createElement("br",{ });
		var tmp37 = React.createElement("br",{ });
		var tmp38 = React.createElement("br",{ });
		var tmp39 = React.createElement("br",{ });
		var tmp40 = React.createElement("br",{ });
		var tmp41 = React.createElement("br",{ });
		var tmp42 = React.createElement("br",{ });
		var tmp43 = React.createElement("br",{ });
		var tmp44 = React.createElement("br",{ });
		var tmp45 = React.createElement("br",{ });
		var tmp46 = React.createElement("br",{ });
		var tmp47 = React.createElement("br",{ });
		var tmp48 = React.createElement("br",{ });
		var tmp49 = React.createElement("br",{ });
		var tmp50 = React.createElement("br",{ });
		var tmp51 = React.createElement("br",{ });
		var tmp52 = React.createElement("br",{ });
		var tmp53 = React.createElement("br",{ });
		var tmp54 = React.createElement("br",{ });
		var tmp55 = React.createElement("br",{ });
		var tmp56 = React.createElement("br",{ });
		var tmp57 = React.createElement("br",{ });
		var tmp58 = React.createElement("br",{ });
		var tmp59 = React.createElement("br",{ });
		var tmp60 = React.createElement("br",{ });
		var tmp61 = React.createElement("br",{ });
		var tmp62 = React.createElement("br",{ });
		var tmp63 = React.createElement("br",{ });
		var tmp64 = React.createElement("br",{ });
		var tmp65 = React.createElement("br",{ });
		var tmp66 = React.createElement("br",{ });
		var tmp67 = React.createElement("br",{ });
		var tmp68 = React.createElement("div",{ className : "two_columns"},"la soupe, le potage     soup ",tmp10,"la salade     salad ",tmp11,"le dessert     dessert ",tmp12,"les frites   fries","l'huile d'olive (f)   olive oil ",tmp13,"un œuf, des œufs   egg, eggs ",tmp14,"le pain   bread ",tmp15,"les pâtes   pasta ",tmp16,"le poivre   pepper ",tmp17,"le riz   rice ",tmp18,"le sel   salt ",tmp19,"le sucre   sugar ",tmp20,"le fruit   fruit ",tmp21,"un abricot   apricot ",tmp22,"un ananas   pineapple ",tmp23,"une banane   banana ",tmp24,"une cerise   cherry ",tmp25,"un citron   lemon ",tmp26,"une fraise   strawberry ",tmp27,"une framboise   raspberry ",tmp28,"une mûre   blackberry ",tmp29,"une myrtille   blueberry ",tmp30,"une orange   orange ",tmp31,"un pamplemousse   grapefruit ",tmp32,"une pastèque   watermelon ",tmp33,"une pêche   peach ",tmp34,"une poire   pear ",tmp35,"une pomme   apple ",tmp36,"une prune   plum ",tmp37,"un raisin   grape ",tmp38,"un légume   vegetable ",tmp39,"une aubergine   eggplant ",tmp40,"la carotte   carrot ",tmp41,"le champignon   mushroom ",tmp42,"le concombre   cucumber ",tmp43,"un haricot   bean ",tmp44,"un oignon   onion ",tmp45,"la pomme de terre   potato ",tmp46,"la tomate   tomato ",tmp47,"la viande   meat ",tmp48,"la dinde   turkey ",tmp49,"le jambon   ham ",tmp50,"le poisson   fish ",tmp51,"le porc   pork ",tmp52,"le poulet   chicken ",tmp53,"le beurre   butter ",tmp54,"le fromage   cheese ",tmp55,"le lait   milk ",tmp56,"le yaourt   yogurt ",tmp57,"le dessert   dessert ",tmp58,"le biscuit   cookie ",tmp59,"le chocolat   chocolate ",tmp60,"le gâteau   cake ",tmp61,"la glace   ice cream ",tmp62,"la pizza ",tmp63,"le sandwich ",tmp64,"du café (tasse du cafe) ",tmp65,"thé (tasse du cafe) ",tmp66,"mulled wine - Vin chaud ",tmp67,"beer Bière");
		return React.createElement("div",{ className : "content_page"},tmp,tmp9,tmp68);
	}
});
var content_a1_voca_Numbers = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_voca_Numbers.__name__ = true;
content_a1_voca_Numbers.__super__ = React_Component;
content_a1_voca_Numbers.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Subtitle,{ text : "1-10"});
		var tmp1 = React.createElement("br",{ });
		var tmp2 = React.createElement("br",{ });
		var tmp3 = React.createElement("br",{ });
		var tmp4 = React.createElement("br",{ });
		var tmp5 = React.createElement("br",{ });
		var tmp6 = React.createElement("br",{ });
		var tmp7 = React.createElement("br",{ });
		var tmp8 = React.createElement("br",{ });
		var tmp9 = React.createElement("br",{ });
		var tmp10 = React.createElement("div",{ className : "two_columns"},"un - 1 ",tmp1,"deux - 2 ",tmp2,"trois - 3 ",tmp3,"quatre - 4 ",tmp4,"cinq - 5 ",tmp5,"six - 6 ",tmp6,"sept - 7 ",tmp7,"huit - 8  ",tmp8,"neuf - 9 ",tmp9,"dix - 10");
		var tmp11 = React.createElement(component_Subtitle,{ text : "11-20"});
		var tmp12 = React.createElement("br",{ });
		var tmp13 = React.createElement("br",{ });
		var tmp14 = React.createElement("br",{ });
		var tmp15 = React.createElement("br",{ });
		var tmp16 = React.createElement("br",{ });
		var tmp17 = React.createElement("br",{ });
		var tmp18 = React.createElement("br",{ });
		var tmp19 = React.createElement("br",{ });
		var tmp20 = React.createElement("br",{ });
		var tmp21 = React.createElement("div",{ className : "two_columns"},"onze - 11 ",tmp12,"douze - 12 ",tmp13,"treize - 13 ",tmp14,"quatorze - 14 ",tmp15,"quinze - 15 ",tmp16,"seize - 16 ",tmp17,"dix-sept - 17 ",tmp18,"dix-huit - 18 ",tmp19,"dix-neuf - 19 ",tmp20,"vingt - 20");
		var tmp22 = React.createElement(component_Subtitle,{ text : "10-1000"});
		var tmp23 = React.createElement("br",{ });
		var tmp24 = React.createElement("br",{ });
		var tmp25 = React.createElement("br",{ });
		var tmp26 = React.createElement("br",{ });
		var tmp27 = React.createElement("br",{ });
		var tmp28 = React.createElement("br",{ });
		var tmp29 = React.createElement("br",{ });
		var tmp30 = React.createElement("br",{ });
		var tmp31 = React.createElement("br",{ });
		var tmp32 = React.createElement("br",{ });
		var tmp33 = React.createElement("div",{ className : "two_columns"},"dix - 10 ",tmp23,"vingt - 20 ",tmp24,"trente - 30 ",tmp25,"quarante - 40 ",tmp26,"cinqante - 50 ",tmp27,"soixante - 60 ",tmp28,"soixante dix - 70 ",tmp29,"quatre-vingt - 80 ",tmp30,"quatre-vingt dix - 90 ",tmp31,"cent - 100 ",tmp32,"mille - 1000");
		return React.createElement("div",{ className : "content_page"},tmp,tmp10,tmp11,tmp21,tmp22,tmp33);
	}
});
var content_a1_voca_Professions = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_voca_Professions.__name__ = true;
content_a1_voca_Professions.__super__ = React_Component;
content_a1_voca_Professions.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Professions"});
		var tmp1 = React.createElement("br",{ });
		var tmp2 = React.createElement("br",{ });
		var tmp3 = React.createElement("br",{ });
		var tmp4 = React.createElement("br",{ });
		var tmp5 = React.createElement("br",{ });
		var tmp6 = React.createElement("br",{ });
		var tmp7 = React.createElement("br",{ });
		var tmp8 = React.createElement("br",{ });
		var tmp9 = React.createElement("br",{ });
		var tmp10 = React.createElement("br",{ });
		var tmp11 = React.createElement("br",{ });
		var tmp12 = React.createElement("br",{ });
		var tmp13 = React.createElement("br",{ });
		var tmp14 = React.createElement("br",{ });
		var tmp15 = React.createElement("br",{ });
		var tmp16 = React.createElement("br",{ });
		var tmp17 = React.createElement("br",{ });
		var tmp18 = React.createElement("br",{ });
		var tmp19 = React.createElement("br",{ });
		var tmp20 = React.createElement("br",{ });
		var tmp21 = React.createElement("br",{ });
		var tmp22 = React.createElement("br",{ });
		var tmp23 = React.createElement("br",{ });
		var tmp24 = React.createElement("br",{ });
		var tmp25 = React.createElement("br",{ });
		var tmp26 = React.createElement("br",{ });
		var tmp27 = React.createElement("br",{ });
		var tmp28 = React.createElement("br",{ });
		var tmp29 = React.createElement("br",{ });
		var tmp30 = React.createElement("br",{ });
		var tmp31 = React.createElement("br",{ });
		var tmp32 = React.createElement("div",{ className : "two_columns"},"doctor\tun médecin ",tmp1,"high school or college instructor\tun professeur ",tmp2,"engineer\tingénieur ",tmp3,"lawyer\tun avocat ",tmp4,"nurse\tun infirmier (une infirmière) ",tmp5,"accountant\tun comptable ",tmp6,"cashier\tun cassier ",tmp7,"waiter\tun serveur ",tmp8,"janitor\tun gardien ",tmp9,"secretary\tun secrétariat ",tmp10,"scientist\tun scientifique ",tmp11,"salesperson\tun vendeur (une vendeuse) ",tmp12,"banker\tun banquier ",tmp13,"computer programmer\tun programmeur (une programmeuse) ",tmp14,"editor\tun rédacteur ",tmp15,"writer\tun écrivant ",tmp16,"interior designer\tun architecte d’intérieur ",tmp17,"web designer\tun créateur de sites ",tmp18,"police officer\tun agent de police ",tmp19,"firefighter\tun pompier ",tmp20,"financial analyst\tun analyste financier ",tmp21,"psychologist\tun psychologue ",tmp22,"dancer\tun danseur ",tmp23,"singer\tun chanteur (une chanteuse) ",tmp24,"artist\tun artiste ",tmp25,"schoolteacher\tun maître ",tmp26,"insurance agent\tun représentant d’assurances ",tmp27,"psychotherapist - Psychothérapeute ",tmp28,"le chef ",tmp29,"cuisinier ",tmp30,"chef de cuisine ",tmp31,"to work\t- travailler");
		return React.createElement("div",{ className : "content_page"},tmp,tmp32);
	}
});
var content_a1_voca_TrainStation = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_voca_TrainStation.__name__ = true;
content_a1_voca_TrainStation.__super__ = React_Component;
content_a1_voca_TrainStation.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement(component_Title,{ text : "Train station"});
		var tmp1 = React.createElement("br",{ });
		var tmp2 = React.createElement("br",{ });
		var tmp3 = React.createElement("br",{ });
		var tmp4 = React.createElement("br",{ });
		var tmp5 = React.createElement("br",{ });
		var tmp6 = React.createElement("br",{ });
		var tmp7 = React.createElement("br",{ });
		var tmp8 = React.createElement("br",{ });
		var tmp9 = React.createElement("br",{ });
		var tmp10 = React.createElement("br",{ });
		var tmp11 = React.createElement("br",{ });
		var tmp12 = React.createElement("br",{ });
		var tmp13 = React.createElement("br",{ });
		var tmp14 = React.createElement("br",{ });
		var tmp15 = React.createElement("br",{ });
		var tmp16 = React.createElement("br",{ });
		var tmp17 = React.createElement("br",{ });
		var tmp18 = React.createElement("br",{ });
		var tmp19 = React.createElement("br",{ });
		var tmp20 = React.createElement("br",{ });
		var tmp21 = React.createElement("br",{ });
		var tmp22 = React.createElement("br",{ });
		var tmp23 = React.createElement("br",{ });
		var tmp24 = React.createElement("br",{ });
		var tmp25 = React.createElement("br",{ });
		var tmp26 = React.createElement("br",{ });
		var tmp27 = React.createElement("br",{ });
		var tmp28 = React.createElement("br",{ });
		var tmp29 = React.createElement("br",{ });
		var tmp30 = React.createElement("br",{ });
		var tmp31 = React.createElement("br",{ });
		var tmp32 = React.createElement("br",{ });
		var tmp33 = React.createElement("br",{ });
		var tmp34 = React.createElement("br",{ });
		var tmp35 = React.createElement("br",{ });
		var tmp36 = React.createElement("br",{ });
		var tmp37 = React.createElement("br",{ });
		var tmp38 = React.createElement("br",{ });
		var tmp39 = React.createElement("br",{ });
		var tmp40 = React.createElement("br",{ });
		var tmp41 = React.createElement("div",{ className : "two_columns"},"Station – la gare ",tmp1,"Ticket office – le guichet ",tmp2,"Platform – le quai ",tmp3,"Waiting room – la salle d’attente ",tmp4,"Passengers – les voyageurs ",tmp5,"Lift – l’ascenseur ",tmp6,"wait - attendre ",tmp7,"arrive - arriver ",tmp8,"depart - partir ",tmp9,"go - aller ",tmp10,"to travel - voyager ",tmp11,"to stop - arrêter ",tmp12,"To reserve – réserver ",tmp13,"to buy - acheter ",tmp14,"to return ticket - retourner le billet ",tmp15,"bus - le bus ",tmp16,"bus station - la gare de bus ",tmp17,"plane - avion ",tmp18,"airport aéroport ",tmp19,"registration enregistrement ",tmp20,"Connection – une correspondance ",tmp21,"High speed train – le train à grand vitesse (TGV) ",tmp22,"Ticket – un billet ",tmp23,"One-way – un aller ",tmp24,"Return – un aller retour ",tmp25,"First class – la première classe ",tmp26,"Ticket prices – les tarifs / les prix ",tmp27,"Refund – un remboursement ",tmp28,"Validate your ticket – composter votre billet ",tmp29,"Timetable – les horaires ",tmp30,"Arrivals – les arrivés ",tmp31,"Departures – les départs ",tmp32,"Leaving from – en provenance de ",tmp33,"Going to – a destination de ",tmp34,"On time – à l’heure ",tmp35,"Delay – un retard ",tmp36,"Traffic – la circulation ",tmp37,"Engineering works – les travaux ",tmp38,"Seat – une place ",tmp39,"Buffet car – la voiture buffet ",tmp40,"A stop – un arret","mes bagages","ma valise","voiture-restaurant","un aller-retour");
		return React.createElement("div",{ className : "content_page"},tmp,tmp41);
	}
});
var content_a1_voca_VerbsOfFirstGroup = function(props,context) {
	React_Component.call(this,props,context);
};
content_a1_voca_VerbsOfFirstGroup.__name__ = true;
content_a1_voca_VerbsOfFirstGroup.__super__ = React_Component;
content_a1_voca_VerbsOfFirstGroup.prototype = $extend(React_Component.prototype,{
	render: function() {
		var tmp = React.createElement("div",{ },"Verbs of first group usually end with -er in infinite form. First group is the biggest one and the easiest one.");
		var tmp1 = React.createElement("br",{ });
		var tmp2 = React.createElement("br",{ });
		var tmp3 = React.createElement("br",{ });
		var tmp4 = React.createElement("br",{ });
		var tmp5 = React.createElement("br",{ });
		var tmp6 = React.createElement("br",{ });
		var tmp7 = React.createElement("br",{ });
		var tmp8 = React.createElement("br",{ });
		var tmp9 = React.createElement("br",{ });
		var tmp10 = React.createElement("br",{ });
		var tmp11 = React.createElement("br",{ });
		var tmp12 = React.createElement("br",{ });
		var tmp13 = React.createElement("br",{ });
		var tmp14 = React.createElement("br",{ });
		var tmp15 = React.createElement("br",{ });
		var tmp16 = React.createElement("br",{ });
		var tmp17 = React.createElement("br",{ });
		var tmp18 = React.createElement("br",{ });
		var tmp19 = React.createElement("br",{ });
		var tmp20 = React.createElement("br",{ });
		var tmp21 = React.createElement("br",{ });
		var tmp22 = React.createElement("br",{ });
		var tmp23 = React.createElement("br",{ });
		var tmp24 = React.createElement("br",{ });
		var tmp25 = React.createElement("br",{ });
		var tmp26 = React.createElement("br",{ });
		var tmp27 = React.createElement("br",{ });
		var tmp28 = React.createElement("br",{ });
		var tmp29 = React.createElement("br",{ });
		var tmp30 = React.createElement("br",{ });
		var tmp31 = React.createElement("br",{ });
		var tmp32 = React.createElement("br",{ });
		var tmp33 = React.createElement("br",{ });
		var tmp34 = React.createElement("br",{ });
		var tmp35 = React.createElement("br",{ });
		var tmp36 = React.createElement("br",{ });
		var tmp37 = React.createElement("br",{ });
		var tmp38 = React.createElement("br",{ });
		var tmp39 = React.createElement("br",{ });
		var tmp40 = React.createElement("br",{ });
		var tmp41 = React.createElement("br",{ });
		var tmp42 = React.createElement("br",{ });
		var tmp43 = React.createElement("br",{ });
		var tmp44 = React.createElement("br",{ });
		var tmp45 = React.createElement("br",{ });
		var tmp46 = React.createElement("br",{ });
		var tmp47 = React.createElement("br",{ });
		var tmp48 = React.createElement("br",{ });
		var tmp49 = React.createElement("div",{ className : "two_columns"},"Acheter ",tmp1,"Appeler ",tmp2,"manger ",tmp3,"parlser ",tmp4,"chanter ",tmp5,"donner ",tmp6,"demander ",tmp7,"passer ",tmp8,"porter ",tmp9,"continuer ",tmp10,"penser ",tmp11,"commencer ",tmp12,"compter ",tmp13,"occuper ",tmp14,"arriver ",tmp15,"decider ",tmp16,"laisser ",tmp17,"sembler ",tmp18,"rappeler ",tmp19,"accepter ",tmp20,"presenter ",tmp21,"poser ",tmp22,"jouer ",tmp23,"toucher ",tmp24,"aimer ",tmp25,"trouver ",tmp26,"retrouver ",tmp27,"expliquer ",tmp28,"gagner ",tmp29,"exister ",tmp30,"changer ",tmp31,"travailler ",tmp32,"assurer ",tmp33,"empecher ",tmp34,"rencontrer ",tmp35,"creer ",tmp36,"chercher ",tmp37,"entrer ",tmp38,"proposer ",tmp39,"apporter ",tmp40,"utiliser ",tmp41,"ajouter ",tmp42,"preparer ",tmp43,"tirer ",tmp44,"pousser ",tmp45,"oublier ",tmp46,"etudier ",tmp47,"signer ",tmp48,"payer");
		var tmp50 = React.createElement("i",{ },"aller");
		var tmp51 = React.createElement("div",{ },"One of the most notable exceptions is ",tmp50," - to go.");
		return React.createElement("div",{ className : "content_page"},tmp,tmp49,tmp51);
	}
});
var event_Message = { __ename__ : true, __constructs__ : ["SetContent","SetView"] };
event_Message.SetContent = ["SetContent",0];
event_Message.SetContent.__enum__ = event_Message;
event_Message.SetView = ["SetView",1];
event_Message.SetView.__enum__ = event_Message;
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
var haxe_ds_BalancedTree = function() {
};
haxe_ds_BalancedTree.__name__ = true;
haxe_ds_BalancedTree.prototype = {
	set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return node.value;
			}
			if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return null;
	}
	,exists: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) {
				return true;
			} else if(c < 0) {
				node = node.left;
			} else {
				node = node.right;
			}
		}
		return false;
	}
	,setLoop: function(k,v,node) {
		if(node == null) {
			return new haxe_ds_TreeNode(null,k,v,null);
		}
		var c = this.compare(k,node.key);
		if(c == 0) {
			return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null ? 0 : node._height);
		} else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,balance: function(l,k,v,r) {
		var hl = l == null ? 0 : l._height;
		var hr = r == null ? 0 : r._height;
		if(hl > hr + 2) {
			var _this = l.left;
			var _this1 = l.right;
			if((_this == null ? 0 : _this._height) >= (_this1 == null ? 0 : _this1._height)) {
				return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r));
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
			}
		} else if(hr > hl + 2) {
			var _this2 = r.right;
			var _this3 = r.left;
			if((_this2 == null ? 0 : _this2._height) > (_this3 == null ? 0 : _this3._height)) {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right);
			} else {
				return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
			}
		} else {
			return new haxe_ds_TreeNode(l,k,v,r,(hl > hr ? hl : hr) + 1);
		}
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) {
		h = -1;
	}
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) {
		var tmp;
		var _this = this.left;
		var _this1 = this.right;
		if((_this == null ? 0 : _this._height) > (_this1 == null ? 0 : _this1._height)) {
			var _this2 = this.left;
			if(_this2 == null) {
				tmp = 0;
			} else {
				tmp = _this2._height;
			}
		} else {
			var _this3 = this.right;
			if(_this3 == null) {
				tmp = 0;
			} else {
				tmp = _this3._height;
			}
		}
		this._height = tmp + 1;
	} else {
		this._height = h;
	}
};
haxe_ds_TreeNode.__name__ = true;
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
haxe_ds_EnumValueMap.__name__ = true;
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1[1] - k2[1];
		if(d != 0) {
			return d;
		}
		var p1 = k1.slice(2);
		var p2 = k2.slice(2);
		if(p1.length == 0 && p2.length == 0) {
			return 0;
		}
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) {
			return ld;
		}
		var _g1 = 0;
		var _g = a1.length;
		while(_g1 < _g) {
			var i = _g1++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) {
				return d;
			}
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) {
			return this.compare(v1,v2);
		} else if((v1 instanceof Array) && v1.__enum__ == null && ((v2 instanceof Array) && v2.__enum__ == null)) {
			return this.compareArgs(v1,v2);
		} else {
			return Reflect.compare(v1,v2);
		}
	}
});
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var logic_ContentController = function() {
	EventBus.listen(event_Message.SetContent,$bind(this,this.onSetContent));
};
logic_ContentController.__name__ = true;
logic_ContentController.prototype = {
	onSetContent: function(data) {
		EventBus.dispatch(event_Message.SetView,{ componentClass : data.type});
	}
};
var logic_NounList = function() {
	this.lists = new haxe_ds_StringMap();
	this.foodList = [];
	this.foodList = [{ value : "pomme", gender : "f", count : true},{ value : "banane", gender : "f", count : true},{ value : "prune", gender : "f", count : true},{ value : "fraise", gender : "f", count : true},{ value : "framboise", gender : "f", count : true},{ value : "citron", gender : "m", count : true},{ value : "abricot", gender : "m", count : true},{ value : "raisin", gender : "m", count : false}];
	var value = this.foodList;
	var _this = this.lists;
	if(__map_reserved["food"] != null) {
		_this.setReserved("food",value);
	} else {
		_this.h["food"] = value;
	}
};
logic_NounList.__name__ = true;
logic_NounList.prototype = {
	getList: function(listId) {
		var _this = this.lists;
		if(__map_reserved[listId] != null) {
			return _this.getReserved(listId);
		} else {
			return _this.h[listId];
		}
	}
	,getNounData: function(value,listId) {
		var _this = this.lists;
		var list = __map_reserved[listId] != null ? _this.getReserved(listId) : _this.h[listId];
		var _g = 0;
		while(_g < list.length) {
			var nounData = list[_g];
			++_g;
			if(nounData.value == value) {
				return nounData;
			}
		}
		return null;
	}
};
var logic_WordFormatter = function() { };
logic_WordFormatter.__name__ = true;
logic_WordFormatter.format = function(value,list,form,plural) {
	var nounData = logic_WordFormatter.nouns.getNounData(value,list);
	if(plural == "true") {
		if(form == "indefinite") {
			return "des " + value + "s";
		} else {
			return "les " + value + "s";
		}
	}
	if(form == "indefinite") {
		if(!nounData.count) {
			if(nounData.gender == "m") {
				return "du " + value;
			} else {
				return "de la " + value;
			}
		} else if(nounData.gender == "m") {
			return "un " + value;
		} else {
			return "une " + value;
		}
	} else if(form == "definite") {
		if(nounData.gender == "m") {
			return "le " + value;
		} else {
			return "la " + value;
		}
	}
	return "not found";
};
logic_WordFormatter.getList = function(listId) {
	return logic_WordFormatter.nouns.getList(listId);
};
var msignal_Signal0 = function() {
	msignal_Signal.call(this);
};
msignal_Signal0.__name__ = true;
msignal_Signal0.__super__ = msignal_Signal;
msignal_Signal0.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function() {
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute();
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_Slot0(this,listener,once,priority);
	}
});
var msignal_Signal1 = function(type) {
	msignal_Signal.call(this,[type]);
};
msignal_Signal1.__name__ = true;
msignal_Signal1.__super__ = msignal_Signal;
msignal_Signal1.prototype = $extend(msignal_Signal.prototype,{
	dispatch: function(value) {
		var slotsToProcess = this.slots;
		while(slotsToProcess.nonEmpty) {
			slotsToProcess.head.execute(value);
			slotsToProcess = slotsToProcess.tail;
		}
	}
	,createSlot: function(listener,once,priority) {
		if(priority == null) {
			priority = 0;
		}
		if(once == null) {
			once = false;
		}
		return new msignal_Slot1(this,listener,once,priority);
	}
});
var msignal_Slot = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	this.signal = signal;
	this.set_listener(listener);
	this.once = once;
	this.priority = priority;
	this.enabled = true;
};
msignal_Slot.__name__ = true;
msignal_Slot.prototype = {
	remove: function() {
		this.signal.remove(this.listener);
	}
	,set_listener: function(value) {
		if(value == null) {
			throw new js__$Boot_HaxeError("listener cannot be null");
		}
		return this.listener = value;
	}
};
var msignal_Slot0 = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
msignal_Slot0.__name__ = true;
msignal_Slot0.__super__ = msignal_Slot;
msignal_Slot0.prototype = $extend(msignal_Slot.prototype,{
	execute: function() {
		if(!this.enabled) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		this.listener();
	}
});
var msignal_Slot1 = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
msignal_Slot1.__name__ = true;
msignal_Slot1.__super__ = msignal_Slot;
msignal_Slot1.prototype = $extend(msignal_Slot.prototype,{
	execute: function(value1) {
		if(!this.enabled) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		if(this.param != null) {
			value1 = this.param;
		}
		this.listener(value1);
	}
});
var msignal_Slot2 = function(signal,listener,once,priority) {
	if(priority == null) {
		priority = 0;
	}
	if(once == null) {
		once = false;
	}
	msignal_Slot.call(this,signal,listener,once,priority);
};
msignal_Slot2.__name__ = true;
msignal_Slot2.__super__ = msignal_Slot;
msignal_Slot2.prototype = $extend(msignal_Slot.prototype,{
	execute: function(value1,value2) {
		if(!this.enabled) {
			return;
		}
		if(this.once) {
			this.remove();
		}
		if(this.param1 != null) {
			value1 = this.param1;
		}
		if(this.param2 != null) {
			value2 = this.param2;
		}
		this.listener(value1,value2);
	}
});
var React = require("react");
var ReactDOM = require("react-dom");
var react_ReactMacro = function() { };
react_ReactMacro.__name__ = true;
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
msignal_SlotList.NIL = new msignal_SlotList(null,null);
String.__name__ = true;
Array.__name__ = true;
var __map_reserved = {}
App.displayName = "App";
CssClass.TITLE = "page_title";
CssClass.SUBTITILE = "page_subtitle";
CssClass.INFO = "page_info";
CssClass.EXAMPLE = "page_example";
CssClass.COMPACT = "compact";
CssClass.COMMENT = "comment";
CssClass.TWO_COLUMNS = "two_columns";
CssClass.WORD_SELECTOR = "word_selector";
CssClass.SELECTOR_CONTENT = "selector_content";
CssClass.PAGE = "content_page";
CssClass.PHRASE = "content_phrase";
EventBus.signal = new msignal_Signal2();
EventBus.listenersMap = new haxe_ds_EnumValueMap();
Subsection.displayName = "Subsection";
component_MessageWithSelector.displayName = "MessageWithSelector";
component_SelectorTooltip.displayName = "SelectorTooltip";
component_Subtitle.displayName = "Subtitle";
component_Title.displayName = "Title";
component_WordSelector.displayName = "WordSelector";
component_sidebar_LeftMenu.displayName = "LeftMenu";
component_sidebar_Level1Button.displayName = "Level1Button";
content_ContentContainer.displayName = "ContentContainer";
content_NotFound.displayName = "NotFound";
content_a1_func_AskDirections.displayName = "AskDirections";
content_a1_func_BuyTicket.displayName = "BuyTicket";
content_a1_func_CafeRestaurant.displayName = "CafeRestaurant";
content_a1_func_Greetings.displayName = "Greetings";
content_a1_func_PersonalInfo.displayName = "PersonalInfo";
content_a1_func_Prices.displayName = "Prices";
content_a1_func_RentApartment.displayName = "RentApartment";
content_a1_func_TimeDate.displayName = "TimeDate";
content_a1_gram_AndButBecause.displayName = "AndButBecause";
content_a1_gram_CanCant.displayName = "CanCant";
content_a1_gram_Comparative.displayName = "Comparative";
content_a1_gram_Imperative.displayName = "Imperative";
content_a1_gram_Intensifiers.displayName = "Intensifiers";
content_a1_gram_Negation.displayName = "Negation";
content_a1_gram_NounsAndVerbs.displayName = "NounsAndVerbs";
content_a1_gram_PastFuture.displayName = "PastFuture";
content_a1_gram_Possession.displayName = "Possession";
content_a1_gram_PrepDirection.displayName = "PrepDirection";
content_a1_gram_PrepPlace.displayName = "PrepPlace";
content_a1_gram_PrepTime.displayName = "PrepTime";
content_a1_gram_PresentTense.displayName = "PresentTense";
content_a1_gram_Quantifiers.displayName = "Quantifiers";
content_a1_gram_Reflective.displayName = "Reflective";
content_a1_gram_ThereIs.displayName = "ThereIs";
content_a1_gram_ToBeToHave.displayName = "ToBeToHave";
content_a1_gram_WhQuestions101.displayName = "WhQuestions101";
content_a1_gram_WouldLike.displayName = "WouldLike";
content_a1_gram_YesNoQuestions.displayName = "YesNoQuestions";
content_a1_voca_Adjectives1.displayName = "Adjectives1";
content_a1_voca_CafeBar.displayName = "CafeBar";
content_a1_voca_CityNav.displayName = "CityNav";
content_a1_voca_Clothes.displayName = "Clothes";
content_a1_voca_Colors.displayName = "Colors";
content_a1_voca_Compliments.displayName = "Compliments";
content_a1_voca_Countries.displayName = "Countries";
content_a1_voca_DateTime.displayName = "DateTime";
content_a1_voca_Food.displayName = "Food";
content_a1_voca_Numbers.displayName = "Numbers";
content_a1_voca_Professions.displayName = "Professions";
content_a1_voca_TrainStation.displayName = "TrainStation";
content_a1_voca_VerbsOfFirstGroup.displayName = "VerbsOfFirstGroup";
logic_WordFormatter.nouns = new logic_NounList();
Main.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this);

//# sourceMappingURL=leftmenu.js.map